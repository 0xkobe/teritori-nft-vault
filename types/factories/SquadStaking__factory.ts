/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SquadStaking, SquadStakingInterface } from "../SquadStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSquadSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSquadSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_bonusMultipliers",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER_BASE_POINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_userSquadInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bonusMultipliers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldownPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
    ],
    name: "isSupportedCollection",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSquadSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSquadSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_size",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_bonusMultipliers",
        type: "uint256[]",
      },
    ],
    name: "setBonusMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
    ],
    name: "setCooldownPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSquadSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSquadSize",
        type: "uint256",
      },
    ],
    name: "setSquadSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    name: "setSupportedCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct SquadStaking.NftInfo[]",
        name: "nfts",
        type: "tuple[]",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "stakeDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "stringToUint",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "hasError",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "supportedCollectionAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedCollectionLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "supportedCollections",
    outputs: [
      {
        internalType: "address[]",
        name: "collections",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "userSquadInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collection",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType: "struct SquadStaking.NftInfo[]",
            name: "nfts",
            type: "tuple[]",
          },
        ],
        internalType: "struct SquadStaking.SquadInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200241b3803806200241b833981016040819052620000349162000113565b6200003f33620000c3565b6000805460ff60a01b191681556001859055600284905560038390555b8151811015620000b8578181815181106200008757634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516000838152600490925260409091205580620000af81620001fe565b9150506200005c565b50505050506200023c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000806080858703121562000129578384fd5b8451602080870151604088015160608901519397509095509350906001600160401b038082111562000159578384fd5b818801915088601f8301126200016d578384fd5b81518181111562000182576200018262000226565b8060051b604051601f19603f83011681018181108582111715620001aa57620001aa62000226565b604052828152858101935084860182860187018d1015620001c9578788fd5b8795505b83861015620001ed578051855260019590950194938601938601620001cd565b50989b979a50959850505050505050565b60006000198214156200021f57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6121cf806200024c6000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c806362b2c8fe116100ee5780638994929e11610097578063a16e360711610071578063a16e3607146103e3578063ae7521a4146103f6578063ca77793314610409578063f2fde38b1461042957600080fd5b80638994929e1461038d5780638da5cb5b1461039657806395f60ec6146103a757600080fd5b806380ea3de1116100c857806380ea3de1146103525780638178c4df146103655780638456cb591461038557600080fd5b806362b2c8fe14610328578063715018a614610337578063801c52361461033f57600080fd5b80631e1a3d351161015b5780632def6620116101355780632def6620146102fd5780633f4ba83a146103055780634b8544f21461030d5780635c975abb1461031657600080fd5b80631e1a3d351461029c5780631f1a31d6146102c7578063251f2e8a146102da57600080fd5b80630bf242d81161018c5780630bf242d8146101ec578063150b7a021461020c5780631bd951551461027457600080fd5b8063014b5c10146101b357806304646a49146101ce5780630bed494c146101d7575b600080fd5b6101bb61043c565b6040519081526020015b60405180910390f35b6101bb60035481565b6101ea6101e5366004611bd3565b61044d565b005b6101bb6101fa366004611eb9565b60046020526000908152604090205481565b61024361021a366004611b5a565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101c5565b610287610282366004611d5b565b6104cd565b604080519283529015156020830152016101c5565b6102af6102aa366004611eb9565b6105b6565b6040516001600160a01b0390911681526020016101c5565b6101ea6102d5366004611cfa565b6105c9565b6102ed6102e8366004611b40565b6106f9565b60405190151581526020016101c5565b6101ea610706565b6101ea610a20565b6101bb60015481565b600054600160a01b900460ff166102ed565b6101bb670de0b6b3a764000081565b6101ea610add565b6101ea61034d366004611c3f565b610b41565b6101ea610360366004611eb9565b610f48565b610378610373366004611eb9565b610fa7565b6040516101c59190611f0e565b6101ea611071565b6101bb60025481565b6000546001600160a01b03166102af565b6103ce6103b5366004611b40565b6007602052600090815260409020805460019091015482565b604080519283526020830191909152016101c5565b6101bb6103f1366004611c0d565b611120565b6101ea610404366004611ed1565b611343565b61041c610417366004611b40565b6113a8565b6040516101c59190611f5b565b6101ea610437366004611b40565b61148b565b6000610448600561156d565b905090565b6000546001600160a01b031633146104ac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b80156104c2576104bd600583611577565b505050565b6104bd600583611593565b60008082815b81518110156105af5760308282815181106104fe57634e487b7160e01b600052603260045260246000fd5b016020015160f81c1080159061053c5750603982828151811061053157634e487b7160e01b600052603260045260246000fd5b016020015160f81c11155b1561059457603082828151811061056357634e487b7160e01b600052603260045260246000fd5b0160200151610575919060f81c6120ff565b60ff1661058385600a6120c9565b61058d9190612091565b935061059d565b600192506105af565b806105a781612152565b9150506104d3565b5050915091565b60006105c36005836115a8565b92915050565b6000546001600160a01b031633146106235760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b80518251146106745760405162461bcd60e51b815260206004820152600f60248201527f6c656e677468206d69736d61746368000000000000000000000000000000000060448201526064016104a3565b60005b81518110156104bd578181815181106106a057634e487b7160e01b600052603260045260246000fd5b6020026020010151600460008584815181106106cc57634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000208190555080806106f190612152565b915050610677565b60006105c36005836115b4565b600054600160a01b900460ff16156107535760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104a3565b336000908152600760205260409020600201546107b25760405162461bcd60e51b815260206004820152601060248201527f7371756164206e6f74206578697374730000000000000000000000000000000060448201526064016104a3565b336000908152600760205260409020600101544210156108145760405162461bcd60e51b815260206004820152601960248201527f7761697420756e74696c207374616b696e6720706572696f640000000000000060448201526064016104a3565b336000908152600760209081526040808320815160608101835281548152600182015481850152600282018054845181870281018701865281815292959394860193879084015b828210156108a3576000848152602090819020604080518082019091526002850290910180546001600160a01b0316825260019081015482840152908352909201910161085b565b50505091525050336000908152600760205260408120818155600181018290559192506108d36002830182611905565b505060005b8160400151518110156109e9578160400151818151811061090957634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03166342842e0e30338560400151858151811061094957634e487b7160e01b600052603260045260246000fd5b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156109be57600080fd5b505af11580156109d2573d6000803e3d6000fd5b5050505080806109e190612152565b9150506108d8565b506040513381527fe5d648ba8f514a64a4104bf6922acc6e04ecab6464b46d696cf123c27079ddd79060200160405180910390a150565b6000546001600160a01b03163314610a7a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b600054600160a01b900460ff16610ad35760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104a3565b610adb6115d6565b565b6000546001600160a01b03163314610b375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b610adb600061167c565b600054600160a01b900460ff1615610b8e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104a3565b3360009081526007602052604090206002015415610bee5760405162461bcd60e51b815260206004820152600c60248201527f737175616420657869737473000000000000000000000000000000000000000060448201526064016104a3565b336000908152600760205260409020546003544290610c0d9083612091565b1115610c5b5760405162461bcd60e51b815260206004820152601360248201527f7761697420756e74696c20636f6f6c646f776e0000000000000000000000000060448201526064016104a3565b600154825110158015610c715750600254825111155b610cbd5760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964206e756d626572206f66206e6674730000000000000000000060448201526064016104a3565b60005b8251811015610dc557828181518110610ce957634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03166342842e0e3330868581518110610d2557634e487b7160e01b600052603260045260246000fd5b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610d9a57600080fd5b505af1158015610dae573d6000803e3d6000fd5b505050508080610dbd90612152565b915050610cc0565b506000610e2c83600081518110610dec57634e487b7160e01b600052603260045260246000fd5b60200260200101516000015184600081518110610e1957634e487b7160e01b600052603260045260246000fd5b6020026020010151602001518551611120565b9050426000610e3b8383612091565b3360009081526007602052604081208481556001018290559091505b8551811015610eff573360009081526007602052604090208651600290910190879083908110610e9757634e487b7160e01b600052603260045260246000fd5b6020908102919091018101518254600180820185556000948552938390208251600290920201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390921691909117815591015191015580610ef781612152565b915050610e57565b5060408051338152602081018490529081018290527f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b69060600160405180910390a15050505050565b6000546001600160a01b03163314610fa25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b600355565b60606000610fb5600561156d565b90508067ffffffffffffffff811115610fde57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611007578160200160208202803683370190505b50915060005b8181101561106a576110206005856115a8565b83828151811061104057634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101528061106281612152565b91505061100d565b5050919050565b6000546001600160a01b031633146110cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b600054600160a01b900460ff16156111185760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104a3565b610adb6116d9565b6000818152600460205260408120548061117c5760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420626f6e7573206d756c7469706c696572000000000000000060448201526064016104a3565b6040517f1f8bc7900000000000000000000000000000000000000000000000000000000081526004810185905260009081906001600160a01b03881690631f8bc7909060240160006040518083038186803b1580156111da57600080fd5b505afa1580156111ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112169190810190611da1565b905060005b8160a00151518110156113015760008260a00151828151811061124e57634e487b7160e01b600052603260045260246000fd5b6020026020010151905060405160200161128b907f5374616d696e6100000000000000000000000000000000000000000000000000815260070190565b60408051601f19818403018152908290528051602091820120835190926112b29201611ef2565b6040516020818303038152906040528051906020012014156112ee576000806112de83602001516104cd565b91509150806112eb578195505b50505b50806112f981612152565b91505061121b565b50670de0b6b3a764000060088461131a85610e106120c9565b61132491906120c9565b61132e91906120a9565b61133891906120a9565b979650505050505050565b6000546001600160a01b0316331461139d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b600191909155600255565b6113cc60405180606001604052806000815260200160008152602001606081525090565b60076000836001600160a01b03166001600160a01b03168152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561147d576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101611435565b505050915250909392505050565b6000546001600160a01b031633146114e55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b6001600160a01b0381166115615760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104a3565b61156a8161167c565b50565b60006105c3825490565b600061158c836001600160a01b038416611761565b9392505050565b600061158c836001600160a01b0384166117b0565b600061158c83836118cd565b6001600160a01b0381166000908152600183016020526040812054151561158c565b600054600160a01b900460ff1661162f5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104a3565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156117265760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104a3565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861165f3390565b60008181526001830160205260408120546117a8575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105c3565b5060006105c3565b600081815260018301602052604081205480156118c35760006117d46001836120e8565b85549091506000906117e8906001906120e8565b905081811461186957600086600001828154811061181657634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061184757634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b855486908061188857634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105c3565b60009150506105c3565b60008260000182815481106118f257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b508054600082556002029060005260206000209081019061156a91905b8082111561195457805473ffffffffffffffffffffffffffffffffffffffff1916815560006001820155600201611922565b5090565b600061196b61196684612069565b612014565b905082815283838301111561197f57600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146119ad57600080fd5b919050565b600082601f8301126119c2578081fd5b815160206119d261196683612045565b80838252828201915082860187848660051b89010111156119f1578586fd5b855b85811015611a8b57815167ffffffffffffffff80821115611a12578889fd5b908901906040828c03601f1901811315611a2a57898afd5b611a32611fc8565b8884015183811115611a42578b8cfd5b611a508e8b83880101611af5565b825250908301519082821115611a64578a8bfd5b611a728d8a84870101611af5565b818a0152875250505092840192908401906001016119f3565b5090979650505050505050565b600082601f830112611aa8578081fd5b81356020611ab861196683612045565b80838252828201915082860187848660051b8901011115611ad7578586fd5b855b85811015611a8b57813584529284019290840190600101611ad9565b600082601f830112611b05578081fd5b8151611b1361196682612069565b818152846020838601011115611b27578283fd5b611b38826020830160208701612122565b949350505050565b600060208284031215611b51578081fd5b61158c82611996565b60008060008060808587031215611b6f578283fd5b611b7885611996565b9350611b8660208601611996565b925060408501359150606085013567ffffffffffffffff811115611ba8578182fd5b8501601f81018713611bb8578182fd5b611bc787823560208401611958565b91505092959194509250565b60008060408385031215611be5578182fd5b611bee83611996565b915060208301358015158114611c02578182fd5b809150509250929050565b600080600060608486031215611c21578081fd5b611c2a84611996565b95602085013595506040909401359392505050565b60006020808385031215611c51578182fd5b823567ffffffffffffffff811115611c67578283fd5b8301601f81018513611c77578283fd5b8035611c8561196682612045565b80828252848201915084840188868560061b8701011115611ca4578687fd5b8694505b83851015611cee57604080828b031215611cc0578788fd5b611cc8611fc8565b611cd183611996565b815282880135888201528452600195909501949286019201611ca8565b50979650505050505050565b60008060408385031215611d0c578182fd5b823567ffffffffffffffff80821115611d23578384fd5b611d2f86838701611a98565b93506020850135915080821115611d44578283fd5b50611d5185828601611a98565b9150509250929050565b600060208284031215611d6c578081fd5b813567ffffffffffffffff811115611d82578182fd5b8201601f81018413611d92578182fd5b611b3884823560208401611958565b600060208284031215611db2578081fd5b815167ffffffffffffffff80821115611dc9578283fd5b9083019060c08286031215611ddc578283fd5b611de4611ff1565b825182811115611df2578485fd5b611dfe87828601611af5565b825250602083015182811115611e12578485fd5b611e1e87828601611af5565b602083015250604083015182811115611e35578485fd5b611e4187828601611af5565b604083015250606083015182811115611e58578485fd5b611e6487828601611af5565b606083015250608083015182811115611e7b578485fd5b611e8787828601611af5565b60808301525060a083015182811115611e9e578485fd5b611eaa878286016119b2565b60a08301525095945050505050565b600060208284031215611eca578081fd5b5035919050565b60008060408385031215611ee3578182fd5b50508035926020909101359150565b60008251611f04818460208701612122565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611f4f5783516001600160a01b031683529284019291840191600101611f2a565b50909695505050505050565b602080825282518282015282810151604080840191909152808401516060808501528051608085018190526000939291830191849160a08701905b80841015611cee57845180516001600160a01b0316835286015186830152938501936001939093019290820190611f96565b6040805190810167ffffffffffffffff81118282101715611feb57611feb612183565b60405290565b60405160c0810167ffffffffffffffff81118282101715611feb57611feb612183565b604051601f8201601f1916810167ffffffffffffffff8111828210171561203d5761203d612183565b604052919050565b600067ffffffffffffffff82111561205f5761205f612183565b5060051b60200190565b600067ffffffffffffffff82111561208357612083612183565b50601f01601f191660200190565b600082198211156120a4576120a461216d565b500190565b6000826120c457634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156120e3576120e361216d565b500290565b6000828210156120fa576120fa61216d565b500390565b600060ff821660ff8416808210156121195761211961216d565b90039392505050565b60005b8381101561213d578181015183820152602001612125565b8381111561214c576000848401525b50505050565b60006000198214156121665761216661216d565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220863c527addd55a12cb9a989b1010bf2959bf038e73bd620e27bf735b28f6d49564736f6c63430008040033";

export class SquadStaking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _minSquadSize: BigNumberish,
    _maxSquadSize: BigNumberish,
    _cooldownPeriod: BigNumberish,
    _bonusMultipliers: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SquadStaking> {
    return super.deploy(
      _minSquadSize,
      _maxSquadSize,
      _cooldownPeriod,
      _bonusMultipliers,
      overrides || {}
    ) as Promise<SquadStaking>;
  }
  getDeployTransaction(
    _minSquadSize: BigNumberish,
    _maxSquadSize: BigNumberish,
    _cooldownPeriod: BigNumberish,
    _bonusMultipliers: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _minSquadSize,
      _maxSquadSize,
      _cooldownPeriod,
      _bonusMultipliers,
      overrides || {}
    );
  }
  attach(address: string): SquadStaking {
    return super.attach(address) as SquadStaking;
  }
  connect(signer: Signer): SquadStaking__factory {
    return super.connect(signer) as SquadStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SquadStakingInterface {
    return new utils.Interface(_abi) as SquadStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SquadStaking {
    return new Contract(address, _abi, signerOrProvider) as SquadStaking;
  }
}
