/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SquadStaking, SquadStakingInterface } from "../SquadStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSquadSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSquadSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_bonusMultipliers",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER_BASE_POINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_userSquadInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bonusMultipliers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldownPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
    ],
    name: "isSupportedCollection",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSquadSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSquadSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_size",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_bonusMultipliers",
        type: "uint256[]",
      },
    ],
    name: "setBonusMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cooldownPeriod",
        type: "uint256",
      },
    ],
    name: "setCooldownPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSquadSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSquadSize",
        type: "uint256",
      },
    ],
    name: "setSquadSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    name: "setSupportedCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct SquadStaking.NftInfo[]",
        name: "nfts",
        type: "tuple[]",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "stakeDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "stringToUint",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "hasError",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "supportedCollectionAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedCollectionLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "supportedCollections",
    outputs: [
      {
        internalType: "address[]",
        name: "collections",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "userSquadInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collection",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType: "struct SquadStaking.NftInfo[]",
            name: "nfts",
            type: "tuple[]",
          },
        ],
        internalType: "struct SquadStaking.SquadInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023fd380380620023fd833981016040819052620000349162000111565b6200003f33620000c1565b6000805460ff60a01b191681556001859055600284905560038390555b8151811015620000b6578181815181106200008757634e487b7160e01b600052603260045260246000fd5b60209081029190910181015160008381526004909252604090912055620000ae81620001fc565b90506200005c565b50505050506200023a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000806080858703121562000127578384fd5b8451602080870151604088015160608901519397509095509350906001600160401b038082111562000157578384fd5b818801915088601f8301126200016b578384fd5b81518181111562000180576200018062000224565b8060051b604051601f19603f83011681018181108582111715620001a857620001a862000224565b604052828152858101935084860182860187018d1015620001c7578788fd5b8795505b83861015620001eb578051855260019590950194938601938601620001cb565b50989b979a50959850505050505050565b60006000198214156200021d57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6121b3806200024a6000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c806362b2c8fe116100ee5780638994929e11610097578063a16e360711610071578063a16e3607146103e3578063ae7521a4146103f6578063ca77793314610409578063f2fde38b1461042957600080fd5b80638994929e1461038d5780638da5cb5b1461039657806395f60ec6146103a757600080fd5b806380ea3de1116100c857806380ea3de1146103525780638178c4df146103655780638456cb591461038557600080fd5b806362b2c8fe14610328578063715018a614610337578063801c52361461033f57600080fd5b80631e1a3d351161015b5780632def6620116101355780632def6620146102fd5780633f4ba83a146103055780634b8544f21461030d5780635c975abb1461031657600080fd5b80631e1a3d351461029c5780631f1a31d6146102c7578063251f2e8a146102da57600080fd5b80630bf242d81161018c5780630bf242d8146101ec578063150b7a021461020c5780631bd951551461027457600080fd5b8063014b5c10146101b357806304646a49146101ce5780630bed494c146101d7575b600080fd5b6101bb61043c565b6040519081526020015b60405180910390f35b6101bb60035481565b6101ea6101e5366004611bb7565b61044d565b005b6101bb6101fa366004611e9d565b60046020526000908152604090205481565b61024361021a366004611b3e565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101c5565b610287610282366004611d3f565b6104cd565b604080519283529015156020830152016101c5565b6102af6102aa366004611e9d565b6105b4565b6040516001600160a01b0390911681526020016101c5565b6101ea6102d5366004611cde565b6105c7565b6102ed6102e8366004611b24565b6106f5565b60405190151581526020016101c5565b6101ea610702565b6101ea610a0e565b6101bb60015481565b600054600160a01b900460ff166102ed565b6101bb670de0b6b3a764000081565b6101ea610acb565b6101ea61034d366004611c23565b610b2f565b6101ea610360366004611e9d565b610f30565b610378610373366004611e9d565b610f8f565b6040516101c59190611ef2565b6101ea611057565b6101bb60025481565b6000546001600160a01b03166102af565b6103ce6103b5366004611b24565b6007602052600090815260409020805460019091015482565b604080519283526020830191909152016101c5565b6101bb6103f1366004611bf1565b611106565b6101ea610404366004611eb5565b611327565b61041c610417366004611b24565b61138c565b6040516101c59190611f3f565b6101ea610437366004611b24565b61146f565b60006104486005611551565b905090565b6000546001600160a01b031633146104ac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b80156104c2576104bd60058361155b565b505050565b6104bd600583611577565b60008082815b81518110156105ad5760308282815181106104fe57634e487b7160e01b600052603260045260246000fd5b016020015160f81c1080159061053c5750603982828151811061053157634e487b7160e01b600052603260045260246000fd5b016020015160f81c11155b1561059457603082828151811061056357634e487b7160e01b600052603260045260246000fd5b0160200151610575919060f81c6120e3565b60ff1661058385600a6120ad565b61058d9190612075565b935061059d565b600192506105ad565b6105a681612136565b90506104d3565b5050915091565b60006105c160058361158c565b92915050565b6000546001600160a01b031633146106215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b80518251146106725760405162461bcd60e51b815260206004820152600f60248201527f6c656e677468206d69736d61746368000000000000000000000000000000000060448201526064016104a3565b60005b81518110156104bd5781818151811061069e57634e487b7160e01b600052603260045260246000fd5b6020026020010151600460008584815181106106ca57634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002081905550806106ee90612136565b9050610675565b60006105c1600583611598565b600054600160a01b900460ff161561074f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104a3565b336000908152600760205260409020600201546107ae5760405162461bcd60e51b815260206004820152601060248201527f7371756164206e6f74206578697374730000000000000000000000000000000060448201526064016104a3565b336000908152600760205260409020600101544210156108105760405162461bcd60e51b815260206004820152601960248201527f7761697420756e74696c207374616b696e6720706572696f640000000000000060448201526064016104a3565b336000908152600760209081526040808320815160608101835281548152600182015481850152600282018054845181870281018701865281815292959394860193879084015b8282101561089f576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610857565b505050915250503360009081526007602052604081209192506108c591600201906118e9565b60005b8160400151518110156109d757816040015181815181106108f957634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03166342842e0e30338560400151858151811061093957634e487b7160e01b600052603260045260246000fd5b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156109ae57600080fd5b505af11580156109c2573d6000803e3d6000fd5b50505050806109d090612136565b90506108c8565b506040513381527fe5d648ba8f514a64a4104bf6922acc6e04ecab6464b46d696cf123c27079ddd79060200160405180910390a150565b6000546001600160a01b03163314610a685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b600054600160a01b900460ff16610ac15760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104a3565b610ac96115ba565b565b6000546001600160a01b03163314610b255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b610ac96000611660565b600054600160a01b900460ff1615610b7c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104a3565b3360009081526007602052604090206002015415610bdc5760405162461bcd60e51b815260206004820152600c60248201527f737175616420657869737473000000000000000000000000000000000000000060448201526064016104a3565b600354336000908152600760205260409020544291610bfa91612075565b1115610c485760405162461bcd60e51b815260206004820152601360248201527f7761697420756e74696c20636f6f6c646f776e0000000000000000000000000060448201526064016104a3565b600154815110158015610c5e5750600254815111155b610caa5760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964206e756d626572206f66206e6674730000000000000000000060448201526064016104a3565b60005b8151811015610db057818181518110610cd657634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03166342842e0e3330858581518110610d1257634e487b7160e01b600052603260045260246000fd5b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610d8757600080fd5b505af1158015610d9b573d6000803e3d6000fd5b5050505080610da990612136565b9050610cad565b506000610e1782600081518110610dd757634e487b7160e01b600052603260045260246000fd5b60200260200101516000015183600081518110610e0457634e487b7160e01b600052603260045260246000fd5b6020026020010151602001518451611106565b9050426000610e268383612075565b3360009081526007602052604081208481556001018290559091505b8451811015610ee8573360009081526007602052604090208551600290910190869083908110610e8257634e487b7160e01b600052603260045260246000fd5b6020908102919091018101518254600180820185556000948552938390208251600290920201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091178155910151910155610ee181612136565b9050610e42565b5060408051338152602081018490529081018290527f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b69060600160405180910390a150505050565b6000546001600160a01b03163314610f8a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b600355565b60606000610f9d6005611551565b90508067ffffffffffffffff811115610fc657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610fef578160200160208202803683370190505b50915060005b818110156110505761100860058561158c565b83828151811061102857634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015261104981612136565b9050610ff5565b5050919050565b6000546001600160a01b031633146110b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b600054600160a01b900460ff16156110fe5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104a3565b610ac96116bd565b600081815260046020526040812054806111625760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420626f6e7573206d756c7469706c696572000000000000000060448201526064016104a3565b6040517f1f8bc7900000000000000000000000000000000000000000000000000000000081526004810185905260009081906001600160a01b03881690631f8bc7909060240160006040518083038186803b1580156111c057600080fd5b505afa1580156111d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111fc9190810190611d85565b905060005b8160a00151518110156112e55760008260a00151828151811061123457634e487b7160e01b600052603260045260246000fd5b60200260200101519050604051602001611271907f5374616d696e6100000000000000000000000000000000000000000000000000815260070190565b60408051601f19818403018152908290528051602091820120835190926112989201611ed6565b6040516020818303038152906040528051906020012014156112d4576000806112c483602001516104cd565b91509150806112d1578195505b50505b506112de81612136565b9050611201565b50670de0b6b3a76400006008846112fe85610e106120ad565b61130891906120ad565b611312919061208d565b61131c919061208d565b979650505050505050565b6000546001600160a01b031633146113815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b600191909155600255565b6113b060405180606001604052806000815260200160008152602001606081525090565b60076000836001600160a01b03166001600160a01b03168152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015611461576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101611419565b505050915250909392505050565b6000546001600160a01b031633146114c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b6001600160a01b0381166115455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104a3565b61154e81611660565b50565b60006105c1825490565b6000611570836001600160a01b038416611745565b9392505050565b6000611570836001600160a01b038416611794565b600061157083836118b1565b6001600160a01b03811660009081526001830160205260408120541515611570565b600054600160a01b900460ff166116135760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104a3565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff161561170a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104a3565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116433390565b600081815260018301602052604081205461178c575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105c1565b5060006105c1565b600081815260018301602052604081205480156118a75760006117b86001836120cc565b85549091506000906117cc906001906120cc565b905081811461184d5760008660000182815481106117fa57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061182b57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b855486908061186c57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105c1565b60009150506105c1565b60008260000182815481106118d657634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b508054600082556002029060005260206000209081019061154e91905b8082111561193857805473ffffffffffffffffffffffffffffffffffffffff1916815560006001820155600201611906565b5090565b600061194f61194a8461204d565b611ff8565b905082815283838301111561196357600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b038116811461199157600080fd5b919050565b600082601f8301126119a6578081fd5b815160206119b661194a83612029565b80838252828201915082860187848660051b89010111156119d5578586fd5b855b85811015611a6f57815167ffffffffffffffff808211156119f6578889fd5b908901906040828c03601f1901811315611a0e57898afd5b611a16611fac565b8884015183811115611a26578b8cfd5b611a348e8b83880101611ad9565b825250908301519082821115611a48578a8bfd5b611a568d8a84870101611ad9565b818a0152875250505092840192908401906001016119d7565b5090979650505050505050565b600082601f830112611a8c578081fd5b81356020611a9c61194a83612029565b80838252828201915082860187848660051b8901011115611abb578586fd5b855b85811015611a6f57813584529284019290840190600101611abd565b600082601f830112611ae9578081fd5b8151611af761194a8261204d565b818152846020838601011115611b0b578283fd5b611b1c826020830160208701612106565b949350505050565b600060208284031215611b35578081fd5b6115708261197a565b60008060008060808587031215611b53578283fd5b611b5c8561197a565b9350611b6a6020860161197a565b925060408501359150606085013567ffffffffffffffff811115611b8c578182fd5b8501601f81018713611b9c578182fd5b611bab8782356020840161193c565b91505092959194509250565b60008060408385031215611bc9578182fd5b611bd28361197a565b915060208301358015158114611be6578182fd5b809150509250929050565b600080600060608486031215611c05578081fd5b611c0e8461197a565b95602085013595506040909401359392505050565b60006020808385031215611c35578182fd5b823567ffffffffffffffff811115611c4b578283fd5b8301601f81018513611c5b578283fd5b8035611c6961194a82612029565b80828252848201915084840188868560061b8701011115611c88578687fd5b8694505b83851015611cd257604080828b031215611ca4578788fd5b611cac611fac565b611cb58361197a565b815282880135888201528452600195909501949286019201611c8c565b50979650505050505050565b60008060408385031215611cf0578182fd5b823567ffffffffffffffff80821115611d07578384fd5b611d1386838701611a7c565b93506020850135915080821115611d28578283fd5b50611d3585828601611a7c565b9150509250929050565b600060208284031215611d50578081fd5b813567ffffffffffffffff811115611d66578182fd5b8201601f81018413611d76578182fd5b611b1c8482356020840161193c565b600060208284031215611d96578081fd5b815167ffffffffffffffff80821115611dad578283fd5b9083019060c08286031215611dc0578283fd5b611dc8611fd5565b825182811115611dd6578485fd5b611de287828601611ad9565b825250602083015182811115611df6578485fd5b611e0287828601611ad9565b602083015250604083015182811115611e19578485fd5b611e2587828601611ad9565b604083015250606083015182811115611e3c578485fd5b611e4887828601611ad9565b606083015250608083015182811115611e5f578485fd5b611e6b87828601611ad9565b60808301525060a083015182811115611e82578485fd5b611e8e87828601611996565b60a08301525095945050505050565b600060208284031215611eae578081fd5b5035919050565b60008060408385031215611ec7578182fd5b50508035926020909101359150565b60008251611ee8818460208701612106565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611f335783516001600160a01b031683529284019291840191600101611f0e565b50909695505050505050565b602080825282518282015282810151604080840191909152808401516060808501528051608085018190526000939291830191849160a08701905b80841015611cd257845180516001600160a01b0316835286015186830152938501936001939093019290820190611f7a565b6040805190810167ffffffffffffffff81118282101715611fcf57611fcf612167565b60405290565b60405160c0810167ffffffffffffffff81118282101715611fcf57611fcf612167565b604051601f8201601f1916810167ffffffffffffffff8111828210171561202157612021612167565b604052919050565b600067ffffffffffffffff82111561204357612043612167565b5060051b60200190565b600067ffffffffffffffff82111561206757612067612167565b50601f01601f191660200190565b6000821982111561208857612088612151565b500190565b6000826120a857634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156120c7576120c7612151565b500290565b6000828210156120de576120de612151565b500390565b600060ff821660ff8416808210156120fd576120fd612151565b90039392505050565b60005b83811015612121578181015183820152602001612109565b83811115612130576000848401525b50505050565b600060001982141561214a5761214a612151565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ad754c4801a8a805af5c839ac09216775a776950ef684f1a7aced52dc758db3364736f6c63430008040033";

export class SquadStaking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _minSquadSize: BigNumberish,
    _maxSquadSize: BigNumberish,
    _cooldownPeriod: BigNumberish,
    _bonusMultipliers: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SquadStaking> {
    return super.deploy(
      _minSquadSize,
      _maxSquadSize,
      _cooldownPeriod,
      _bonusMultipliers,
      overrides || {}
    ) as Promise<SquadStaking>;
  }
  getDeployTransaction(
    _minSquadSize: BigNumberish,
    _maxSquadSize: BigNumberish,
    _cooldownPeriod: BigNumberish,
    _bonusMultipliers: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _minSquadSize,
      _maxSquadSize,
      _cooldownPeriod,
      _bonusMultipliers,
      overrides || {}
    );
  }
  attach(address: string): SquadStaking {
    return super.attach(address) as SquadStaking;
  }
  connect(signer: Signer): SquadStaking__factory {
    return super.connect(signer) as SquadStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SquadStakingInterface {
    return new utils.Interface(_abi) as SquadStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SquadStaking {
    return new Contract(address, _abi, signerOrProvider) as SquadStaking;
  }
}
