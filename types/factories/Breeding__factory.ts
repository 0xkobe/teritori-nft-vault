/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Breeding, BreedingInterface } from "../Breeding";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_parentCollection",
        type: "address",
      },
      {
        internalType: "string",
        name: "_child_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_child_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_child_URI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_nft_impl",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "countLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct Breeding.BreedConfig",
        name: "_breedConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "baseUrl",
            type: "string",
          },
        ],
        internalType: "struct Breeding.ChildCollectionConfig",
        name: "_childCollectionConfig",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawFund",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId2",
        type: "uint256",
      },
    ],
    name: "breed",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "breedConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "countLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "breedList",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "parentTokenId1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "parentTokenId2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "childTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "childCollection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "childCollectionConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "baseUrl",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "royaltyReceiver",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "string",
            name: "tokenUri",
            type: "string",
          },
        ],
        internalType: "struct Breeding.MintData[]",
        name: "mintData",
        type: "tuple[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "royaltyReceiver",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "string",
            name: "tokenUri",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
              {
                internalType: "string",
                name: "image",
                type: "string",
              },
              {
                internalType: "string",
                name: "external_url",
                type: "string",
              },
              {
                internalType: "string",
                name: "animation_url",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "trait_type",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct TeritoriNft.Attribute[]",
                name: "attributes",
                type: "tuple[]",
              },
            ],
            internalType: "struct TeritoriNft.Metadata",
            name: "extension",
            type: "tuple",
          },
        ],
        internalType: "struct Breeding.MintDataWithMetadata[]",
        name: "mintData",
        type: "tuple[]",
      },
    ],
    name: "mintWithMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentCollection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "countLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct Breeding.BreedConfig",
        name: "newBreedConfig",
        type: "tuple",
      },
    ],
    name: "setBreedConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "baseUrl",
            type: "string",
          },
        ],
        internalType: "struct Breeding.ChildCollectionConfig",
        name: "newChildCollectionConfig",
        type: "tuple",
      },
    ],
    name: "setChildCollectionConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBreed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userBreedList",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200231d3803806200231d8339810160408190526200003491620004ab565b6200003f336200016d565b6000805460ff60a01b1916905560018055600380546001600160a01b0319166001600160a01b0389161790556200008283620001bd602090811b62000d8a17901c565b600480546001600160a01b0319166001600160a01b0392909216918217815560405163a6487c5360e01b815263a6487c5391620000c6918a918a918a9101620005c9565b600060405180830381600087803b158015620000e157600080fd5b505af1158015620000f6573d6000803e3d6000fd5b505083516005555050602080830151600655604083015160075560608301516008556080830151600980546001600160a01b0319166001600160a01b039092169190911790558151600a90815582820151805184936200015c92600b929101906200026f565b50905050505050505050506200068e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166200026a5760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640160405180910390fd5b919050565b8280546200027d906200063b565b90600052602060002090601f016020900481019282620002a15760008555620002ec565b82601f10620002bc57805160ff1916838001178555620002ec565b82800160010185558215620002ec579182015b82811115620002ec578251825591602001919060010190620002cf565b50620002fa929150620002fe565b5090565b5b80821115620002fa5760008155600101620002ff565b80516001600160a01b03811681146200026a57600080fd5b600082601f8301126200033e578081fd5b81516001600160401b03808211156200035b576200035b62000678565b604051601f8301601f19908116603f0116810190828211818310171562000386576200038662000678565b816040528381528660208588010111156200039f578485fd5b620003b284602083016020890162000608565b9695505050505050565b600060a08284031215620003ce578081fd5b60405160a081016001600160401b0381118282101715620003f357620003f362000678565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201526200042b6080840162000315565b60808201525092915050565b60006040828403121562000449578081fd5b604080519081016001600160401b0380821183831017156200046f576200046f62000678565b816040528293508451835260208501519150808211156200048f57600080fd5b506200049e858286016200032d565b6020830152505092915050565b6000806000806000806000610160888a031215620004c7578283fd5b620004d28862000315565b60208901519097506001600160401b0380821115620004ef578485fd5b620004fd8b838c016200032d565b975060408a015191508082111562000513578485fd5b620005218b838c016200032d565b965060608a015191508082111562000537578485fd5b620005458b838c016200032d565b95506200055560808b0162000315565b9450620005668b60a08c01620003bc565b93506101408a01519150808211156200057d578283fd5b506200058c8a828b0162000437565b91505092959891949750929550565b60008151808452620005b581602086016020860162000608565b601f01601f19169290920160200192915050565b606081526000620005de60608301866200059b565b8281036020840152620005f281866200059b565b90508281036040840152620003b281856200059b565b60005b83811015620006255781810151838201526020016200060b565b8381111562000635576000848401525b50505050565b600181811c908216806200065057607f821691505b602082108114156200067257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611c7f806200069e6000396000f3fe60806040526004361061016a5760003560e01c80638da5cb5b116100cb578063c5b930161161007f578063e07fa3c111610059578063e07fa3c11461042b578063f2fde38b14610440578063fca3b5aa1461046057600080fd5b8063c5b9301614610356578063cb595cf3146103b7578063d9ecad7b1461041857600080fd5b80639963bd64116100b05780639963bd64146102f3578063af0066a014610321578063c09893d51461033657600080fd5b80638da5cb5b146102ba57806392548bbe146102d857600080fd5b80634f88e67911610122578063715018a611610107578063715018a6146102705780637f242051146102855780638456cb59146102a557600080fd5b80634f88e679146102265780635c975abb1461024657600080fd5b80633f4ba83a116101535780633f4ba83a146101cf578063496acc80146101e65780634d7222951461020657600080fd5b8063075461721461016f57806320e5dfee146101ac575b600080fd5b34801561017b57600080fd5b5060025461018f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101b857600080fd5b506101c1610480565b6040516101a3929190611acc565b3480156101db57600080fd5b506101e4610517565b005b3480156101f257600080fd5b506101e461020136600461193a565b6105d9565b34801561021257600080fd5b506101e461022136600461181b565b610682565b34801561023257600080fd5b5060045461018f906001600160a01b031681565b34801561025257600080fd5b50600054600160a01b900460ff1660405190151581526020016101a3565b34801561027c57600080fd5b506101e461073b565b34801561029157600080fd5b5060035461018f906001600160a01b031681565b3480156102b157600080fd5b506101e461079f565b3480156102c657600080fd5b506000546001600160a01b031661018f565b3480156102e457600080fd5b506101e46102213660046116e9565b3480156102ff57600080fd5b5061031361030e3660046116c0565b61084e565b6040519081526020016101a3565b34801561032d57600080fd5b506101e461087f565b34801561034257600080fd5b506101e46103513660046119ad565b6108df565b34801561036257600080fd5b5060055460065460075460085460095461038694939291906001600160a01b031685565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a0016101a3565b3480156103c357600080fd5b506103d76103d2366004611a20565b610960565b604080516001600160a01b0390981688526020880196909652948601939093526060850191909152608084015260a0830152151560c082015260e0016101a3565b6101e4610426366004611a50565b6109bc565b34801561043757600080fd5b506101e4610a64565b34801561044c57600080fd5b506101e461045b3660046116a6565b610c1f565b34801561046c57600080fd5b506101e461047b3660046116a6565b610d01565b600a8054600b805491929161049490611bf8565b80601f01602080910402602001604051908101604052809291908181526020018280546104c090611bf8565b801561050d5780601f106104e25761010080835404028352916020019161050d565b820191906000526020600020905b8154815290600101906020018083116104f057829003601f168201915b5050505050905082565b6000546001600160a01b031633146105765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600054600160a01b900460ff166105cf5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161056d565b6105d7610e45565b565b6000546001600160a01b031633146106335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b8051600555602081015160065560408101516007556060810151600855608001516009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b600260015414156106d55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161056d565b60026001819055546001600160a01b031633146107345760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161056d565b5060018055565b6000546001600160a01b031633146107955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b6105d76000610eeb565b6000546001600160a01b031633146107f95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b600054600160a01b900460ff16156108465760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161056d565b6105d7610f48565b600d602052816000526040600020818154811061086a57600080fd5b90600052602060002001600091509150505481565b6000546001600160a01b031633146108d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b42600555565b6000546001600160a01b031633146109395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b8051600a908155602080830151805184939261095a92600b92910190611382565b50505050565b600c818154811061097057600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601546001600160a01b039095169650929491939092919060ff1687565b600054600160a01b900460ff1615610a095760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161056d565b60026001541415610a5c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161056d565b505060018055565b6000546001600160a01b03163314610abe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b6009546000906001600160a01b0316610ad8575047610b6f565b6009546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610b3457600080fd5b505afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c9190611a38565b90505b60008111610bbf5760405162461bcd60e51b815260206004820152601160248201527f4e4f5f415641494c41424c455f46554e44000000000000000000000000000000604482015260640161056d565b600954610bd6906001600160a01b03163383610fd0565b600954604080516001600160a01b039092168252602082018390527f09ad672d4e7c4892da934d1051932ebe9ec4b6ec8c3f40d569176db3e93e5abe910160405180910390a150565b6000546001600160a01b03163314610c795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b6001600160a01b038116610cf55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161056d565b610cfe81610eeb565b50565b6000546001600160a01b03163314610d5b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09150506001600160a01b038116610e405760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640161056d565b919050565b600054600160a01b900460ff16610e9e5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161056d565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615610f955760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161056d565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ece3390565b6001600160a01b038316611081576000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461102b576040519150601f19603f3d011682016040523d82523d6000602084013e611030565b606091505b505090508061095a5760405162461bcd60e51b815260206004820152601c60248201527f4e41544956455f544f4b454e5f5452414e534645525f4641494c454400000000604482015260640161056d565b6110956001600160a01b038416838361109a565b505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152611095928692916000916111589185169084906111e8565b8051909150156110955780806020019051810190611176919061191a565b6110955760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161056d565b60606111f78484600085611201565b90505b9392505050565b6060824710156112795760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161056d565b6001600160a01b0385163b6112d05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161056d565b600080866001600160a01b031685876040516112ec9190611a9d565b60006040518083038185875af1925050503d8060008114611329576040519150601f19603f3d011682016040523d82523d6000602084013e61132e565b606091505b509150915061133e828286611349565b979650505050505050565b606083156113585750816111fa565b8251156113685782518084602001fd5b8160405162461bcd60e51b815260040161056d9190611ab9565b82805461138e90611bf8565b90600052602060002090601f0160209004810192826113b057600085556113f6565b82601f106113c957805160ff19168380011785556113f6565b828001600101855582156113f6579182015b828111156113f65782518255916020019190600101906113db565b50611402929150611406565b5090565b5b808211156114025760008155600101611407565b80356001600160a01b0381168114610e4057600080fd5b600082601f830112611442578081fd5b8135602061145761145283611ba8565b611b77565b80838252828201915082860187848660051b8901011115611476578586fd5b855b8581101561151057813567ffffffffffffffff80821115611497578889fd5b908901906040828c03601f19018113156114af57898afd5b6114b7611ae5565b88840135838111156114c7578b8cfd5b6114d58e8b8388010161151d565b8252509083013590828211156114e9578a8bfd5b6114f78d8a8487010161151d565b818a015287525050509284019290840190600101611478565b5090979650505050505050565b600082601f83011261152d578081fd5b813567ffffffffffffffff81111561154757611547611c33565b61155a601f8201601f1916602001611b77565b81815284602083860101111561156e578283fd5b816020850160208301379081016020019190915292915050565b600060c08284031215611599578081fd5b6115a1611b0e565b9050813567ffffffffffffffff808211156115bb57600080fd5b6115c78583860161151d565b835260208401359150808211156115dd57600080fd5b6115e98583860161151d565b6020840152604084013591508082111561160257600080fd5b61160e8583860161151d565b6040840152606084013591508082111561162757600080fd5b6116338583860161151d565b6060840152608084013591508082111561164c57600080fd5b6116588583860161151d565b608084015260a084013591508082111561167157600080fd5b5061167e84828501611432565b60a08301525092915050565b80356bffffffffffffffffffffffff81168114610e4057600080fd5b6000602082840312156116b7578081fd5b6111fa8261141b565b600080604083850312156116d2578081fd5b6116db8361141b565b946020939093013593505050565b600060208083850312156116fb578182fd5b823567ffffffffffffffff80821115611712578384fd5b818501915085601f830112611725578384fd5b813561173361145282611ba8565b80828252858201915085850189878560051b8801011115611752578788fd5b875b8481101561180c5781358681111561176a57898afd5b870160a0818d03601f1901811315611780578a8bfd5b611788611b31565b8a8301358152604061179b81850161141b565b8c8301526117ab6060850161168a565b908201526080830135898111156117c0578c8dfd5b6117ce8f8d8387010161151d565b6060830152509082013590888211156117e5578b8cfd5b6117f38e8c84860101611588565b6080820152865250509287019290870190600101611754565b50909998505050505050505050565b6000602080838503121561182d578182fd5b823567ffffffffffffffff80821115611844578384fd5b818501915085601f830112611857578384fd5b813561186561145282611ba8565b80828252858201915085850189878560051b8801011115611884578788fd5b875b8481101561180c5781358681111561189c57898afd5b87016080818d03601f190112156118b157898afd5b6118b9611b54565b89820135815260406118cc81840161141b565b8b83015260606118dd81850161168a565b8284015260808401359150898211156118f4578c8dfd5b6119028f8d8487010161151d565b90830152508552509287019290870190600101611886565b60006020828403121561192b578081fd5b815180151581146111fa578182fd5b600060a0828403121561194b578081fd5b60405160a0810181811067ffffffffffffffff8211171561196e5761196e611c33565b8060405250823581526020830135602082015260408301356040820152606083013560608201526119a16080840161141b565b60808201529392505050565b6000602082840312156119be578081fd5b813567ffffffffffffffff808211156119d5578283fd5b90830190604082860312156119e8578283fd5b6119f0611ae5565b82358152602083013582811115611a05578485fd5b611a118782860161151d565b60208301525095945050505050565b600060208284031215611a31578081fd5b5035919050565b600060208284031215611a49578081fd5b5051919050565b60008060408385031215611a62578182fd5b50508035926020909101359150565b60008151808452611a89816020860160208601611bcc565b601f01601f19169290920160200192915050565b60008251611aaf818460208701611bcc565b9190910192915050565b6020815260006111fa6020830184611a71565b8281526040602082015260006111f76040830184611a71565b6040805190810167ffffffffffffffff81118282101715611b0857611b08611c33565b60405290565b60405160c0810167ffffffffffffffff81118282101715611b0857611b08611c33565b60405160a0810167ffffffffffffffff81118282101715611b0857611b08611c33565b6040516080810167ffffffffffffffff81118282101715611b0857611b08611c33565b604051601f8201601f1916810167ffffffffffffffff81118282101715611ba057611ba0611c33565b604052919050565b600067ffffffffffffffff821115611bc257611bc2611c33565b5060051b60200190565b60005b83811015611be7578181015183820152602001611bcf565b8381111561095a5750506000910152565b600181811c90821680611c0c57607f821691505b60208210811415611c2d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212200f262fc848eada114b9e5b906d92ac2466b834c873ef62a9dbd1fbce50ef4a7264736f6c63430008040033";

export class Breeding__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _parentCollection: string,
    _child_name: string,
    _child_symbol: string,
    _child_URI: string,
    _nft_impl: string,
    _breedConfig: {
      startTime: BigNumberish;
      countLimit: BigNumberish;
      duration: BigNumberish;
      priceAmount: BigNumberish;
      currency: string;
    },
    _childCollectionConfig: { maxSupply: BigNumberish; baseUrl: string },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Breeding> {
    return super.deploy(
      _parentCollection,
      _child_name,
      _child_symbol,
      _child_URI,
      _nft_impl,
      _breedConfig,
      _childCollectionConfig,
      overrides || {}
    ) as Promise<Breeding>;
  }
  getDeployTransaction(
    _parentCollection: string,
    _child_name: string,
    _child_symbol: string,
    _child_URI: string,
    _nft_impl: string,
    _breedConfig: {
      startTime: BigNumberish;
      countLimit: BigNumberish;
      duration: BigNumberish;
      priceAmount: BigNumberish;
      currency: string;
    },
    _childCollectionConfig: { maxSupply: BigNumberish; baseUrl: string },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _parentCollection,
      _child_name,
      _child_symbol,
      _child_URI,
      _nft_impl,
      _breedConfig,
      _childCollectionConfig,
      overrides || {}
    );
  }
  attach(address: string): Breeding {
    return super.attach(address) as Breeding;
  }
  connect(signer: Signer): Breeding__factory {
    return super.connect(signer) as Breeding__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BreedingInterface {
    return new utils.Interface(_abi) as BreedingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Breeding {
    return new Contract(address, _abi, signerOrProvider) as Breeding;
  }
}
