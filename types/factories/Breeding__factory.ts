/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Breeding, BreedingInterface } from "../Breeding";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_parentCollection",
        type: "address",
      },
      {
        internalType: "string",
        name: "_childName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_childSymbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_childURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_nftImpl",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "countLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct Breeding.BreedConfig",
        name: "_breedConfig",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "currentSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "baseUrl",
            type: "string",
          },
        ],
        internalType: "struct Breeding.ChildCollectionConfig",
        name: "_childCollectionConfig",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "parentTokenId1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "parentTokenId2",
        type: "uint256",
      },
    ],
    name: "Breed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "childTokenId",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "breedId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "parentTokenId1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "parentTokenId2",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawFund",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId2",
        type: "uint256",
      },
    ],
    name: "breed",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "breedConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "countLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "breedList",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "parentTokenId1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "parentTokenId2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "childTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "childCollection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "childCollectionConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "currentSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "baseUrl",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "royaltyReceiver",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "string",
            name: "tokenUri",
            type: "string",
          },
        ],
        internalType: "struct Breeding.MintData[]",
        name: "mintData",
        type: "tuple[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "royaltyReceiver",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "royaltyPercentage",
            type: "uint96",
          },
          {
            internalType: "string",
            name: "tokenUri",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
              {
                internalType: "string",
                name: "image",
                type: "string",
              },
              {
                internalType: "string",
                name: "external_url",
                type: "string",
              },
              {
                internalType: "string",
                name: "animation_url",
                type: "string",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "trait_type",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct TeritoriNft.Attribute[]",
                name: "attributes",
                type: "tuple[]",
              },
            ],
            internalType: "struct TeritoriNft.Metadata",
            name: "extension",
            type: "tuple",
          },
        ],
        internalType: "struct Breeding.MintDataWithMetadata[]",
        name: "mintData",
        type: "tuple[]",
      },
    ],
    name: "mintWithMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nftBreededCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentCollection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "countLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct Breeding.BreedConfig",
        name: "newBreedConfig",
        type: "tuple",
      },
    ],
    name: "setBreedConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currentSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "baseUrl",
            type: "string",
          },
        ],
        internalType: "struct Breeding.ChildCollectionConfig",
        name: "newChildCollectionConfig",
        type: "tuple",
      },
    ],
    name: "setChildCollectionConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBreed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "userBreedList",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "breedId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620036e5380380620036e58339810160408190526200003491620004cf565b6200003f3362000187565b6000805460ff60a01b1916905560018055600380546001600160a01b0319166001600160a01b0389161790556200008283620001d7602090811b62001db817901c565b600480546001600160a01b0319166001600160a01b0392909216918217815560405163a6487c5360e01b815263a6487c5391620000c6918a918a918a9101620005ed565b600060405180830381600087803b158015620000e157600080fd5b505af1158015620000f6573d6000803e3d6000fd5b50508351600555505060208083015160065560408084015160075560608401516008556080840151600980546001600160a01b0319166001600160a01b039092169190911790558251600a90815583830151600b5590830151805184936200016492600c9291019062000289565b5050600280546001600160a01b0319163317905550620006b29650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b038116620002845760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c656400000000000000000000604482015260640160405180910390fd5b919050565b82805462000297906200065f565b90600052602060002090601f016020900481019282620002bb576000855562000306565b82601f10620002d657805160ff191683800117855562000306565b8280016001018555821562000306579182015b8281111562000306578251825591602001919060010190620002e9565b506200031492915062000318565b5090565b5b8082111562000314576000815560010162000319565b80516001600160a01b03811681146200028457600080fd5b600082601f83011262000358578081fd5b81516001600160401b03808211156200037557620003756200069c565b604051601f8301601f19908116603f01168101908282118183101715620003a057620003a06200069c565b81604052838152866020858801011115620003b9578485fd5b620003cc8460208301602089016200062c565b9695505050505050565b600060a08284031215620003e8578081fd5b60405160a081016001600160401b03811182821017156200040d576200040d6200069c565b80604052508091508251815260208301516020820152604083015160408201526060830151606082015262000445608084016200032f565b60808201525092915050565b60006060828403121562000463578081fd5b604051606081016001600160401b0380821183831017156200048957620004896200069c565b8160405282935084518352602085015160208401526040850151915080821115620004b357600080fd5b50620004c28582860162000347565b6040830152505092915050565b6000806000806000806000610160888a031215620004eb578283fd5b620004f6886200032f565b60208901519097506001600160401b038082111562000513578485fd5b620005218b838c0162000347565b975060408a015191508082111562000537578485fd5b620005458b838c0162000347565b965060608a01519150808211156200055b578485fd5b620005698b838c0162000347565b95506200057960808b016200032f565b94506200058a8b60a08c01620003d6565b93506101408a0151915080821115620005a1578283fd5b50620005b08a828b0162000451565b91505092959891949750929550565b60008151808452620005d98160208601602086016200062c565b601f01601f19169290920160200192915050565b606081526000620006026060830186620005bf565b8281036020840152620006168186620005bf565b90508281036040840152620003cc8185620005bf565b60005b83811015620006495781810151838201526020016200062f565b8381111562000659576000848401525b50505050565b600181811c908216806200067457607f821691505b602082108114156200069657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61302380620006c26000396000f3fe6080604052600436106101805760003560e01c80638456cb59116100d6578063d9ecad7b1161007f578063e112fdc611610059578063e112fdc61461047b578063f2fde38b146104b6578063fca3b5aa146104d657600080fd5b8063d9ecad7b14610426578063de8498a214610439578063e07fa3c11461046657600080fd5b8063af0066a0116100b0578063af0066a01461034f578063c5b9301614610364578063cb595cf3146103c557600080fd5b80638456cb59146102fc5780638da5cb5b1461031157806392548bbe1461032f57600080fd5b80634d72229511610138578063715018a611610112578063715018a6146102a7578063791fd20e146102bc5780637f242051146102dc57600080fd5b80634d7222951461023d5780634f88e6791461025d5780635c975abb1461027d57600080fd5b80632e1a7d4d116101695780632e1a7d4d146101e65780633f4ba83a14610208578063496acc801461021d57600080fd5b8063075461721461018557806320e5dfee146101c2575b600080fd5b34801561019157600080fd5b506002546101a5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101ce57600080fd5b506101d76104f6565b6040516101b993929190612dec565b3480156101f257600080fd5b50610206610201366004612b60565b610591565b005b34801561021457600080fd5b50610206610862565b34801561022957600080fd5b50610206610238366004612a56565b61091f565b34801561024957600080fd5b50610206610258366004612935565b6109c8565b34801561026957600080fd5b506004546101a5906001600160a01b031681565b34801561028957600080fd5b50600054600160a01b900460ff1660405190151581526020016101b9565b3480156102b357600080fd5b50610206610d66565b3480156102c857600080fd5b506102066102d7366004612acb565b610dca565b3480156102e857600080fd5b506003546101a5906001600160a01b031681565b34801561030857600080fd5b50610206610e53565b34801561031d57600080fd5b506000546001600160a01b03166101a5565b34801561033b57600080fd5b5061020661034a366004612803565b610f02565b34801561035b57600080fd5b506102066112c2565b34801561037057600080fd5b5060055460065460075460085460095461039494939291906001600160a01b031685565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a0016101b9565b3480156103d157600080fd5b506103e56103e0366004612b60565b611322565b604080516001600160a01b0390981688526020880196909652948601939093526060850191909152608084015260a0830152151560c082015260e0016101b9565b610206610434366004612b90565b61137e565b34801561044557600080fd5b506104596104543660046127cb565b611a26565b6040516101b99190612d95565b34801561047257600080fd5b50610206611a92565b34801561048757600080fd5b506104a8610496366004612b60565b600e6020526000908152604090205481565b6040519081526020016101b9565b3480156104c257600080fd5b506102066104d13660046127cb565b611c4d565b3480156104e257600080fd5b506102066104f13660046127cb565b611d2f565b600a8054600b54600c80549293919261050e90612f56565b80601f016020809104026020016040519081016040528092919081815260200182805461053a90612f56565b80156105875780601f1061055c57610100808354040283529160200191610587565b820191906000526020600020905b81548152906001019060200180831161056a57829003601f168201915b5050505050905083565b600260015414156105e95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001819055506000600d828154811061061457634e487b7160e01b600052603260045260246000fd5b6000918252602090912060079091020180549091506001600160a01b0316331461066f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016105e0565b600681015460ff16156106c45760405162461bcd60e51b815260206004820152601160248201527f414c52454144595f57495448445241574e00000000000000000000000000000060448201526064016105e0565b42816005015411156107185760405162461bcd60e51b815260206004820152601360248201527f434f4f4c444f574e5f4e4f545f5041535345440000000000000000000000000060448201526064016105e0565b60068101805460ff1916600190811790915560035490820154604051632142170760e11b815230600482015233602482015260448101919091526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561078157600080fd5b505af1158015610795573d6000803e3d6000fd5b50506003546002840154604051632142170760e11b815230600482015233602482015260448101919091526001600160a01b0390911692506342842e0e9150606401600060405180830381600087803b1580156107f157600080fd5b505af1158015610805573d6000803e3d6000fd5b505050506001810154600282015460408051338152602081018690529081019290925260608201527f02f25270a4d87bea75db541cdfe559334a275b4a233520ed6c0a2429667cca949060800160405180910390a1505060018055565b6000546001600160a01b031633146108bc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b600054600160a01b900460ff166109155760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016105e0565b61091d611e73565b565b6000546001600160a01b031633146109795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b8051600555602081015160065560408101516007556060810151600855608001516009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b60026001541415610a1b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105e0565b60026001819055546001600160a01b03163314610a695760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016105e0565b600a54600d548251610a7b9083612efb565b1115610ac95760405162461bcd60e51b815260206004820152601360248201527f414c4c5f42524545445f50524f4345535345440000000000000000000000000060448201526064016105e0565b60005b8251811015610d5b57828181518110610af557634e487b7160e01b600052603260045260246000fd5b602002602001015160000151600d8381548110610b2257634e487b7160e01b600052603260045260246000fd5b6000918252602090912060036007909202010155600454600d80546001600160a01b039092169163b55f92b2919085908110610b6e57634e487b7160e01b600052603260045260246000fd5b600091825260209091206007909102015485516001600160a01b0390911690869085908110610bad57634e487b7160e01b600052603260045260246000fd5b602002602001015160000151868581518110610bd957634e487b7160e01b600052603260045260246000fd5b602002602001015160200151878681518110610c0557634e487b7160e01b600052603260045260246000fd5b602002602001015160400151888781518110610c3157634e487b7160e01b600052603260045260246000fd5b6020026020010151606001516040518663ffffffff1660e01b8152600401610c5d959493929190612bf9565b600060405180830381600087803b158015610c7757600080fd5b505af1158015610c8b573d6000803e3d6000fd5b505050507f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885600d8381548110610cd157634e487b7160e01b600052603260045260246000fd5b600091825260209091206007909102015484516001600160a01b0390911690859084908110610d1057634e487b7160e01b600052603260045260246000fd5b60209081029190910181015151604080516001600160a01b039094168452918301520160405180910390a181610d4581612f91565b9250508080610d5390612f91565b915050610acc565b50600a555060018055565b6000546001600160a01b03163314610dc05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b61091d6000611f19565b6000546001600160a01b03163314610e245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b8051600a908155602080830151600b5560408301518051849392610e4d92600c929101906124b3565b50505050565b6000546001600160a01b03163314610ead5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b600054600160a01b900460ff1615610efa5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105e0565b61091d611f76565b60026001541415610f555760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105e0565b60026001819055546001600160a01b03163314610fa35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016105e0565b600a54600d548251610fb59083612efb565b11156110035760405162461bcd60e51b815260206004820152601360248201527f414c4c5f42524545445f50524f4345535345440000000000000000000000000060448201526064016105e0565b60005b8251811015610d5b5782818151811061102f57634e487b7160e01b600052603260045260246000fd5b602002602001015160000151600d838154811061105c57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060036007909202010155600454600d80546001600160a01b0390921691638b6678029190859081106110a857634e487b7160e01b600052603260045260246000fd5b600091825260209091206007909102015485516001600160a01b03909116908690859081106110e757634e487b7160e01b600052603260045260246000fd5b60200260200101516000015186858151811061111357634e487b7160e01b600052603260045260246000fd5b60200260200101516020015187868151811061113f57634e487b7160e01b600052603260045260246000fd5b60200260200101516040015188878151811061116b57634e487b7160e01b600052603260045260246000fd5b60200260200101516060015189888151811061119757634e487b7160e01b600052603260045260246000fd5b6020026020010151608001516040518763ffffffff1660e01b81526004016111c496959493929190612c3f565b600060405180830381600087803b1580156111de57600080fd5b505af11580156111f2573d6000803e3d6000fd5b505050507f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885600d838154811061123857634e487b7160e01b600052603260045260246000fd5b600091825260209091206007909102015484516001600160a01b039091169085908490811061127757634e487b7160e01b600052603260045260246000fd5b60209081029190910181015151604080516001600160a01b039094168452918301520160405180910390a1816112ac81612f91565b92505080806112ba90612f91565b915050611006565b6000546001600160a01b0316331461131c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b42600555565b600d818154811061133257600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601546001600160a01b039095169650929491939092919060ff1687565b600054600160a01b900460ff16156113cb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105e0565b6002600154141561141e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105e0565b60026001556005541580159061143657506005544210155b6114825760405162461bcd60e51b815260206004820152601160248201527f42524545445f4e4f545f5354415254454400000000000000000000000000000060448201526064016105e0565b600b54600d54106114d55760405162461bcd60e51b815260206004820152600b60248201527f42524545445f454e44454400000000000000000000000000000000000000000060448201526064016105e0565b6008546009546114f2916001600160a01b03909116903390611ffe565b6006546000838152600e602052604090205410801561152057506006546000828152600e6020526040902054105b61156c5760405162461bcd60e51b815260206004820152601160248201527f42524545445f434f554e545f4c494d495400000000000000000000000000000060448201526064016105e0565b6000828152600e6020526040812080549161158683612f91565b90915550506000818152600e602052604081208054916115a583612f91565b919050555060006040518060e00160405280336001600160a01b0316815260200184815260200183815260200160008152602001428152602001600560020154426115f09190612efb565b81526000602090910152600754909150611770576003546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e9060240160206040518083038186803b15801561164857600080fd5b505afa15801561165c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168091906127e7565b6001600160a01b031614801561171857506003546040516331a9108f60e11b81526004810184905233916001600160a01b031690636352211e9060240160206040518083038186803b1580156116d557600080fd5b505afa1580156116e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170d91906127e7565b6001600160a01b0316145b6117645760405162461bcd60e51b815260206004820152600960248201527f4e4f545f4f574e4552000000000000000000000000000000000000000000000060448201526064016105e0565b600160c0820152611845565b600354604051632142170760e11b8152336004820152306024820152604481018590526001600160a01b03909116906342842e0e90606401600060405180830381600087803b1580156117c257600080fd5b505af11580156117d6573d6000803e3d6000fd5b5050600354604051632142170760e11b8152336004820152306024820152604481018690526001600160a01b0390911692506342842e0e9150606401600060405180830381600087803b15801561182c57600080fd5b505af1158015611840573d6000803e3d6000fd5b505050505b600d805460018082018355600083815284517fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb56007909402938401805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790556020808601517fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb68501556040808701517fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb786015560608701517fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb886015560808701517fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb986015560a08701517fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eba86015560c08701517fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1ebb909501805460ff191695151595909517909455338252600f90529190912091546119c99190612f13565b8154600181018355600092835260209283902001556040805133815291820185905281018390527fba98b7f4d0873fd00cc6a3e0c32bbae8a106a12e09d2e6f26e13fab08ce0b6ef9060600160405180910390a150506001805550565b6001600160a01b0381166000908152600f6020908152604091829020805483518184028101840190945280845260609392830182828015611a8657602002820191906000526020600020905b815481526020019060010190808311611a72575b50505050509050919050565b6000546001600160a01b03163314611aec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b6009546000906001600160a01b0316611b06575047611b9d565b6009546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015611b6257600080fd5b505afa158015611b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9a9190612b78565b90505b60008111611bed5760405162461bcd60e51b815260206004820152601160248201527f4e4f5f415641494c41424c455f46554e4400000000000000000000000000000060448201526064016105e0565b600954611c04906001600160a01b03163383612075565b600954604080516001600160a01b039092168252602082018390527f09ad672d4e7c4892da934d1051932ebe9ec4b6ec8c3f40d569176db3e93e5abe910160405180910390a150565b6000546001600160a01b03163314611ca75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b6001600160a01b038116611d235760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105e0565b611d2c81611f19565b50565b6000546001600160a01b03163314611d895760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09150506001600160a01b038116611e6e5760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064016105e0565b919050565b600054600160a01b900460ff16611ecc5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016105e0565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615611fc35760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105e0565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611efc3390565b6001600160a01b0383166120605734811461205b5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f4d53475f56414c554500000000000000000000000000000060448201526064016105e0565b505050565b61205b6001600160a01b03841683308461213a565b6001600160a01b038316612126576000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146120d0576040519150601f19603f3d011682016040523d82523d6000602084013e6120d5565b606091505b5050905080610e4d5760405162461bcd60e51b815260206004820152601c60248201527f4e41544956455f544f4b454e5f5452414e534645525f4641494c45440000000060448201526064016105e0565b61205b6001600160a01b03841683836121eb565b6040516001600160a01b0380851660248301528316604482015260648101829052610e4d9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612234565b6040516001600160a01b03831660248201526044810182905261205b9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401612187565b6000612289826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123199092919063ffffffff16565b80519091501561205b57808060200190518101906122a79190612a36565b61205b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105e0565b60606123288484600085612332565b90505b9392505050565b6060824710156123aa5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105e0565b6001600160a01b0385163b6124015760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105e0565b600080866001600160a01b0316858760405161241d9190612bdd565b60006040518083038185875af1925050503d806000811461245a576040519150601f19603f3d011682016040523d82523d6000602084013e61245f565b606091505b509150915061246f82828661247a565b979650505050505050565b6060831561248957508161232b565b8251156124995782518084602001fd5b8160405162461bcd60e51b81526004016105e09190612dd9565b8280546124bf90612f56565b90600052602060002090601f0160209004810192826124e15760008555612527565b82601f106124fa57805160ff1916838001178555612527565b82800160010185558215612527579182015b8281111561252757825182559160200191906001019061250c565b50612533929150612537565b5090565b5b808211156125335760008155600101612538565b8035611e6e81612fd8565b600082601f830112612567578081fd5b8135602061257c61257783612ed7565b612ea6565b80838252828201915082860187848660051b890101111561259b578586fd5b855b8581101561263557813567ffffffffffffffff808211156125bc578889fd5b908901906040828c03601f19018113156125d457898afd5b6125dc612e14565b88840135838111156125ec578b8cfd5b6125fa8e8b83880101612642565b82525090830135908282111561260e578a8bfd5b61261c8d8a84870101612642565b818a01528752505050928401929084019060010161259d565b5090979650505050505050565b600082601f830112612652578081fd5b813567ffffffffffffffff81111561266c5761266c612fc2565b61267f601f8201601f1916602001612ea6565b818152846020838601011115612693578283fd5b816020850160208301379081016020019190915292915050565b600060c082840312156126be578081fd5b6126c6612e3d565b9050813567ffffffffffffffff808211156126e057600080fd5b6126ec85838601612642565b8352602084013591508082111561270257600080fd5b61270e85838601612642565b6020840152604084013591508082111561272757600080fd5b61273385838601612642565b6040840152606084013591508082111561274c57600080fd5b61275885838601612642565b6060840152608084013591508082111561277157600080fd5b61277d85838601612642565b608084015260a084013591508082111561279657600080fd5b506127a384828501612557565b60a08301525092915050565b80356bffffffffffffffffffffffff81168114611e6e57600080fd5b6000602082840312156127dc578081fd5b813561232b81612fd8565b6000602082840312156127f8578081fd5b815161232b81612fd8565b60006020808385031215612815578182fd5b823567ffffffffffffffff8082111561282c578384fd5b818501915085601f83011261283f578384fd5b813561284d61257782612ed7565b80828252858201915085850189878560051b880101111561286c578788fd5b875b848110156129265781358681111561288457898afd5b870160a0818d03601f190181131561289a578a8bfd5b6128a2612e60565b8a830135815260406128b581850161254c565b8c8301526128c5606085016127af565b908201526080830135898111156128da578c8dfd5b6128e88f8d83870101612642565b6060830152509082013590888211156128ff578b8cfd5b61290d8e8c848601016126ad565b608082015286525050928701929087019060010161286e565b50909998505050505050505050565b60006020808385031215612947578182fd5b823567ffffffffffffffff8082111561295e578384fd5b818501915085601f830112612971578384fd5b813561297f61257782612ed7565b80828252858201915085850189878560051b880101111561299e578788fd5b875b84811015612926578135868111156129b657898afd5b87016080818d03601f190112156129cb57898afd5b6129d3612e83565b8982013581526040808301356129e881612fd8565b828c015260606129f98482016127af565b828401526080840135915089821115612a10578c8dfd5b612a1e8f8d84870101612642565b908301525085525092870192908701906001016129a0565b600060208284031215612a47578081fd5b8151801515811461232b578182fd5b600060a08284031215612a67578081fd5b60405160a0810181811067ffffffffffffffff82111715612a8a57612a8a612fc2565b8060405250823581526020830135602082015260408301356040820152606083013560608201526080830135612abf81612fd8565b60808201529392505050565b600060208284031215612adc578081fd5b813567ffffffffffffffff80821115612af3578283fd5b9083019060608286031215612b06578283fd5b604051606081018181108382111715612b2157612b21612fc2565b80604052508235815260208301356020820152604083013582811115612b45578485fd5b612b5187828601612642565b60408301525095945050505050565b600060208284031215612b71578081fd5b5035919050565b600060208284031215612b89578081fd5b5051919050565b60008060408385031215612ba2578081fd5b50508035926020909101359150565b60008151808452612bc9816020860160208601612f2a565b601f01601f19169290920160200192915050565b60008251612bef818460208701612f2a565b9190910192915050565b60006001600160a01b0380881683528660208401528086166040840152506bffffffffffffffffffffffff8416606083015260a0608083015261246f60a0830184612bb1565b60006001600160a01b038089168352602088818501526040828916818601526bffffffffffffffffffffffff8816606086015260c06080860152612c8660c0860188612bb1565b925084830360a0860152855160c08452612ca360c0850182612bb1565b90508287015184820384860152612cba8282612bb1565b9150508187015184820383860152612cd28282612bb1565b91505060608701518482036060860152612cec8282612bb1565b91505060808701518482036080860152612d068282612bb1565b91505060a087015184820360a086015281945080518083528483019550848160051b8401018583019250875b82811015612d8257848203601f1901885283518051878452612d5688850182612bb1565b91890151848303858b0152919050612d6e8183612bb1565b998901999589019593505050600101612d32565b509e9d5050505050505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612dcd57835183529284019291840191600101612db1565b50909695505050505050565b60208152600061232b6020830184612bb1565b838152826020820152606060408201526000612e0b6060830184612bb1565b95945050505050565b6040805190810167ffffffffffffffff81118282101715612e3757612e37612fc2565b60405290565b60405160c0810167ffffffffffffffff81118282101715612e3757612e37612fc2565b60405160a0810167ffffffffffffffff81118282101715612e3757612e37612fc2565b6040516080810167ffffffffffffffff81118282101715612e3757612e37612fc2565b604051601f8201601f1916810167ffffffffffffffff81118282101715612ecf57612ecf612fc2565b604052919050565b600067ffffffffffffffff821115612ef157612ef1612fc2565b5060051b60200190565b60008219821115612f0e57612f0e612fac565b500190565b600082821015612f2557612f25612fac565b500390565b60005b83811015612f45578181015183820152602001612f2d565b83811115610e4d5750506000910152565b600181811c90821680612f6a57607f821691505b60208210811415612f8b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612fa557612fa5612fac565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611d2c57600080fdfea2646970667358221220669ded2ec745e5a3873260891eb5bd97dcee14c8d256e0f268cd32170b56dd2064736f6c63430008040033";

export class Breeding__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _parentCollection: string,
    _childName: string,
    _childSymbol: string,
    _childURI: string,
    _nftImpl: string,
    _breedConfig: {
      startTime: BigNumberish;
      countLimit: BigNumberish;
      duration: BigNumberish;
      priceAmount: BigNumberish;
      currency: string;
    },
    _childCollectionConfig: {
      currentSupply: BigNumberish;
      maxSupply: BigNumberish;
      baseUrl: string;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Breeding> {
    return super.deploy(
      _parentCollection,
      _childName,
      _childSymbol,
      _childURI,
      _nftImpl,
      _breedConfig,
      _childCollectionConfig,
      overrides || {}
    ) as Promise<Breeding>;
  }
  getDeployTransaction(
    _parentCollection: string,
    _childName: string,
    _childSymbol: string,
    _childURI: string,
    _nftImpl: string,
    _breedConfig: {
      startTime: BigNumberish;
      countLimit: BigNumberish;
      duration: BigNumberish;
      priceAmount: BigNumberish;
      currency: string;
    },
    _childCollectionConfig: {
      currentSupply: BigNumberish;
      maxSupply: BigNumberish;
      baseUrl: string;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _parentCollection,
      _childName,
      _childSymbol,
      _childURI,
      _nftImpl,
      _breedConfig,
      _childCollectionConfig,
      overrides || {}
    );
  }
  attach(address: string): Breeding {
    return super.attach(address) as Breeding;
  }
  connect(signer: Signer): Breeding__factory {
    return super.connect(signer) as Breeding__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BreedingInterface {
    return new utils.Interface(_abi) as BreedingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Breeding {
    return new Contract(address, _abi, signerOrProvider) as Breeding;
  }
}
