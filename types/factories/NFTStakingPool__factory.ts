/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTStakingPool,
  NFTStakingPoolInterface,
} from "../NFTStakingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161088538038061088583398101604081905261002f91610186565b61003833610081565b606083901b6001600160601b031916608052600180546001600160a01b0319166001600160a01b03841617905580516100789060029060208401906100d1565b505050506102c4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546100dd90610273565b90600052602060002090601f0160209004810192826100ff5760008555610145565b82601f1061011857805160ff1916838001178555610145565b82800160010185558215610145579182015b8281111561014557825182559160200191906001019061012a565b50610151929150610155565b5090565b5b808211156101515760008155600101610156565b80516001600160a01b038116811461018157600080fd5b919050565b60008060006060848603121561019a578283fd5b6101a38461016a565b925060206101b281860161016a565b60408601519093506001600160401b03808211156101ce578384fd5b818701915087601f8301126101e1578384fd5b8151818111156101f3576101f36102ae565b604051601f8201601f19908116603f0116810190838211818310171561021b5761021b6102ae565b816040528281528a86848701011115610232578687fd5b8693505b828410156102535784840186015181850187015292850192610236565b8284111561026357868684830101525b8096505050505050509250925092565b600181811c9082168061028757607f821691505b602082108114156102a857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c6105a36102e2600039600061015e01526105a36000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638340f54911610076578063dc4c90d31161005b578063dc4c90d314610159578063f2fde38b14610180578063f940e3851461019357600080fd5b80638340f5491461013a5780638da5cb5b1461014857600080fd5b806369328dec116100a757806369328dec146100f4578063715018a6146101075780637de1e5361461010f57600080fd5b806306fdde03146100c35780631e83409a146100e1575b600080fd5b6100cb6101a5565b6040516100d891906104c6565b60405180910390f35b6100f26100ef3660046103fd565b50565b005b6100f261010236600461048b565b505050565b6100f2610233565b600154610122906001600160a01b031681565b6040516001600160a01b0390911681526020016100d8565b6100f2610102366004610450565b6000546001600160a01b0316610122565b6101227f000000000000000000000000000000000000000000000000000000000000000081565b6100f261018e3660046103fd565b61029e565b6100f26101a136600461041e565b5050565b600280546101b290610519565b80601f01602080910402602001604051908101604052809291908181526020018280546101de90610519565b801561022b5780601f106102005761010080835404028352916020019161022b565b820191906000526020600020905b81548152906001019060200180831161020e57829003601f168201915b505050505081565b6000546001600160a01b031633146102925760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61029c6000610379565b565b6000546001600160a01b031633146102f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610289565b6001600160a01b0381166103745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610289565b6100ef815b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103f857600080fd5b919050565b60006020828403121561040e578081fd5b610417826103e1565b9392505050565b60008060408385031215610430578081fd5b610439836103e1565b9150610447602084016103e1565b90509250929050565b600080600060608486031215610464578081fd5b61046d846103e1565b925061047b602085016103e1565b9150604084013590509250925092565b60008060006060848603121561049f578283fd5b6104a8846103e1565b9250602084013591506104bd604085016103e1565b90509250925092565b6000602080835283518082850152825b818110156104f2578581018301518582016040015282016104d6565b818111156105035783604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061052d57607f821691505b60208210811415610567577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220c59515936d987b3c6ee399ae7594929dff92e0a078affee8dc382059b12c0c2064736f6c63430008040033";

export class NFTStakingPool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _poolManager: string,
    _collection: string,
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTStakingPool> {
    return super.deploy(
      _poolManager,
      _collection,
      _name,
      overrides || {}
    ) as Promise<NFTStakingPool>;
  }
  getDeployTransaction(
    _poolManager: string,
    _collection: string,
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _poolManager,
      _collection,
      _name,
      overrides || {}
    );
  }
  attach(address: string): NFTStakingPool {
    return super.attach(address) as NFTStakingPool;
  }
  connect(signer: Signer): NFTStakingPool__factory {
    return super.connect(signer) as NFTStakingPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTStakingPoolInterface {
    return new utils.Interface(_abi) as NFTStakingPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTStakingPool {
    return new Contract(address, _abi, signerOrProvider) as NFTStakingPool;
  }
}
