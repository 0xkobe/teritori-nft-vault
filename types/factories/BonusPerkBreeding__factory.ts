/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BonusPerkBreeding,
  BonusPerkBreedingInterface,
} from "../BonusPerkBreeding";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_riot",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bonusPerk",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftMetadataRegistry",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct BonusPerkBreeding.BreedConfig",
        name: "_breedConfig",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "riotTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bonusPerkTokenId",
        type: "uint256",
      },
    ],
    name: "Breed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawFund",
    type: "event",
  },
  {
    inputs: [],
    name: "LUCK",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTECTION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAMINA",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bonusPerk",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "riotTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bonusPerkTokenId",
        type: "uint256",
      },
    ],
    name: "breed",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "breedConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "breedList",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "riotTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bonusPerkTokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "breedRequestsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftMetadataRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "riot",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct BonusPerkBreeding.BreedConfig",
        name: "newBreedConfig",
        type: "tuple",
      },
    ],
    name: "setBreedConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBreed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "userBreedList",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ef938038062001ef983398101604081905262000034916200012e565b6200003f33620000c1565b6000805460ff60a01b1916905560018055600380546001600160a01b03199081166001600160a01b039687161790915560048054821694861694909417909355600580548416928516929092179091558051600655602081015160075560400151600880548316919093161790915560028054339216919091179055620001e6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200012957600080fd5b919050565b60008060008084860360c081121562000145578485fd5b620001508662000111565b9450620001606020870162000111565b9350620001706040870162000111565b92506060605f198201121562000184578182fd5b50604051606081016001600160401b0381118282101715620001b457634e487b7160e01b83526041600452602483fd5b6040526060860151815260808601516020820152620001d660a0870162000111565b6040820152939692955090935050565b611d0380620001f66000396000f3fe6080604052600436106101805760003560e01c80638456cb59116100d6578063cb595cf31161007f578063e07fa3c111610059578063e07fa3c114610488578063f2fde38b1461049d578063fca3b5aa146104bd57600080fd5b8063cb595cf314610403578063d9ecad7b14610448578063de8498a21461045b57600080fd5b8063af0066a0116100b0578063af0066a01461038d578063c5b93016146103a2578063c9d32edb146103ee57600080fd5b80638456cb591461033a5780638da5cb5b1461034f5780638e4af17b1461036d57600080fd5b8063442e642011610138578063656791d611610112578063656791d6146102f0578063715018a614610310578063838c295d1461032557600080fd5b8063442e64201461028e5780634e235ac5146102b15780635c975abb146102c657600080fd5b80632a0eba30116101695780632a0eba30146102375780632c87572b146102575780633f4ba83a1461027757600080fd5b80630754617214610185578063150b7a02146101c2575b600080fd5b34801561019157600080fd5b506002546101a5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101ce57600080fd5b506102066101dd3660046119df565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101b9565b34801561024357600080fd5b506004546101a5906001600160a01b031681565b34801561026357600080fd5b506005546101a5906001600160a01b031681565b34801561028357600080fd5b5061028c6104dd565b005b34801561029a57600080fd5b506102a361059f565b6040519081526020016101b9565b3480156102bd57600080fd5b506102a36105e3565b3480156102d257600080fd5b50600054600160a01b900460ff1660405190151581526020016101b9565b3480156102fc57600080fd5b506003546101a5906001600160a01b031681565b34801561031c57600080fd5b5061028c610611565b34801561033157600080fd5b506102a3610675565b34801561034657600080fd5b5061028c61069d565b34801561035b57600080fd5b506000546001600160a01b03166101a5565b34801561037957600080fd5b5061028c610388366004611abb565b61074c565b34801561039957600080fd5b5061028c6107e5565b3480156103ae57600080fd5b506006546007546008546103ca9291906001600160a01b031683565b6040805193845260208401929092526001600160a01b0316908201526060016101b9565b3480156103fa57600080fd5b506009546102a3565b34801561040f57600080fd5b5061042361041e366004611b1c565b610845565b604080516001600160a01b0390941684526020840192909252908201526060016101b9565b61028c610456366004611b4c565b610882565b34801561046757600080fd5b5061047b6104763660046119a7565b610df6565b6040516101b99190611b89565b34801561049457600080fd5b5061028c610e62565b3480156104a957600080fd5b5061028c6104b83660046119a7565b61101d565b3480156104c957600080fd5b5061028c6104d83660046119a7565b6110ff565b6000546001600160a01b0316331461053c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600054600160a01b900460ff166105955760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610533565b61059d611188565b565b6040516020016105ca906020808252600790820152665374616d696e6160c81b604082015260600190565b6040516020818303038152906040528051906020012081565b6040516020016105ca906020808252600a9082015269283937ba32b1ba34b7b760b11b604082015260600190565b6000546001600160a01b0316331461066b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610533565b61059d600061122e565b6040516020016105ca906020808252600490820152634c75636b60e01b604082015260600190565b6000546001600160a01b031633146106f75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610533565b600054600160a01b900460ff16156107445760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610533565b61059d61128b565b6000546001600160a01b031633146107a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610533565b80516006556020810151600755604001516008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6000546001600160a01b0316331461083f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610533565b42600655565b6009818154811061085557600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b600054600160a01b900460ff16156108cf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610533565b600260015414156109225760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610533565b60026001556006541580159061093a57506006544210155b6109865760405162461bcd60e51b815260206004820152601160248201527f42524545445f4e4f545f535441525445440000000000000000000000000000006044820152606401610533565b6007546008546109a3916001600160a01b03909116903390611313565b60408051606081018252338082526020820185905281830184905260035492516331a9108f60e11b815260048101869052919290916001600160a01b0390911690636352211e9060240160206040518083038186803b158015610a0557600080fd5b505afa158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3d91906119c3565b6001600160a01b0316148015610ad75750600480546040516331a9108f60e11b815291820184905233916001600160a01b0390911690636352211e9060240160206040518083038186803b158015610a9457600080fd5b505afa158015610aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acc91906119c3565b6001600160a01b0316145b610b235760405162461bcd60e51b815260206004820152600960248201527f4e4f545f4f574e455200000000000000000000000000000000000000000000006044820152606401610533565b610b6e604051602001610b51906020808252600790820152665374616d696e6160c81b604082015260600190565b60405160208183030381529060405280519060200120848461138a565b610b9f604051602001610b51906020808252600a9082015269283937ba32b1ba34b7b760b11b604082015260600190565b610bca604051602001610b51906020808252600490820152634c75636b60e01b604082015260600190565b600480546040517f42842e0e0000000000000000000000000000000000000000000000000000000081523392810192909252306024830152604482018490526001600160a01b0316906342842e0e90606401600060405180830381600087803b158015610c3657600080fd5b505af1158015610c4a573d6000803e3d6000fd5b5050600480546040517f42966c680000000000000000000000000000000000000000000000000000000081529182018690526001600160a01b031692506342966c689150602401600060405180830381600087803b158015610cab57600080fd5b505af1158015610cbf573d6000803e3d6000fd5b50506009805460018082018355600083815286517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af6003909402938401805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790556020808801517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b08501556040808901517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b190950194909455338252600a9052919091209154919350610d99925090611c49565b8154600181018355600092835260209283902001556040805133815291820185905281018390527fba98b7f4d0873fd00cc6a3e0c32bbae8a106a12e09d2e6f26e13fab08ce0b6ef9060600160405180910390a150506001805550565b6001600160a01b0381166000908152600a6020908152604091829020805483518184028101840190945280845260609392830182828015610e5657602002820191906000526020600020905b815481526020019060010190808311610e42575b50505050509050919050565b6000546001600160a01b03163314610ebc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610533565b6008546000906001600160a01b0316610ed6575047610f6d565b6008546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610f3257600080fd5b505afa158015610f46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6a9190611b34565b90505b60008111610fbd5760405162461bcd60e51b815260206004820152601160248201527f4e4f5f415641494c41424c455f46554e440000000000000000000000000000006044820152606401610533565b600854610fd4906001600160a01b03163383611569565b600854604080516001600160a01b039092168252602082018390527f09ad672d4e7c4892da934d1051932ebe9ec4b6ec8c3f40d569176db3e93e5abe910160405180910390a150565b6000546001600160a01b031633146110775760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610533565b6001600160a01b0381166110f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610533565b6110fc8161122e565b50565b6000546001600160a01b031633146111595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610533565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600054600160a01b900460ff166111e15760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610533565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156112d85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610533565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112113390565b6001600160a01b038316611375573481146113705760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f4d53475f56414c55450000000000000000000000000000006044820152606401610533565b505050565b6113706001600160a01b03841683308461162e565b60055460048054604051635047b18f60e11b81526001600160a01b03918216928101929092526024820186905260448201849052600092169063a08f631e9060640160206040518083038186803b1580156113e457600080fd5b505afa1580156113f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141c9190611b34565b9050801561156357600554600354604051635047b18f60e11b81526001600160a01b0391821660048201526024810187905260448101869052600092919091169063a08f631e9060640160206040518083038186803b15801561147e57600080fd5b505afa158015611492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b69190611b34565b6005546003549192506001600160a01b03908116916310525f78911687876114de8787611c31565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1681526001600160a01b039094166004850152602484019290925260448301526064820152608401600060405180830381600087803b15801561154957600080fd5b505af115801561155d573d6000803e3d6000fd5b50505050505b50505050565b6001600160a01b03831661161a576000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146115c4576040519150601f19603f3d011682016040523d82523d6000602084013e6115c9565b606091505b50509050806115635760405162461bcd60e51b815260206004820152601c60248201527f4e41544956455f544f4b454e5f5452414e534645525f4641494c4544000000006044820152606401610533565b6113706001600160a01b03841683836116df565b6040516001600160a01b03808516602483015283166044820152606481018290526115639085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611728565b6040516001600160a01b0383166024820152604481018290526113709084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161167b565b600061177d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661180d9092919063ffffffff16565b805190915015611370578080602001905181019061179b9190611a9b565b6113705760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610533565b606061181c8484600085611826565b90505b9392505050565b60608247101561189e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610533565b6001600160a01b0385163b6118f55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610533565b600080866001600160a01b031685876040516119119190611b6d565b60006040518083038185875af1925050503d806000811461194e576040519150601f19603f3d011682016040523d82523d6000602084013e611953565b606091505b509150915061196382828661196e565b979650505050505050565b6060831561197d57508161181f565b82511561198d5782518084602001fd5b8160405162461bcd60e51b81526004016105339190611bcd565b6000602082840312156119b8578081fd5b813561181f81611cb8565b6000602082840312156119d4578081fd5b815161181f81611cb8565b600080600080608085870312156119f4578283fd5b84356119ff81611cb8565b9350602085810135611a1081611cb8565b935060408601359250606086013567ffffffffffffffff80821115611a33578384fd5b818801915088601f830112611a46578384fd5b813581811115611a5857611a58611ca2565b611a6a601f8201601f19168501611c00565b91508082528984828501011115611a7f578485fd5b8084840185840137810190920192909252939692955090935050565b600060208284031215611aac578081fd5b8151801515811461181f578182fd5b600060608284031215611acc578081fd5b6040516060810181811067ffffffffffffffff82111715611aef57611aef611ca2565b806040525082358152602083013560208201526040830135611b1081611cb8565b60408201529392505050565b600060208284031215611b2d578081fd5b5035919050565b600060208284031215611b45578081fd5b5051919050565b60008060408385031215611b5e578182fd5b50508035926020909101359150565b60008251611b7f818460208701611c60565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611bc157835183529284019291840191600101611ba5565b50909695505050505050565b6020815260008251806020840152611bec816040850160208701611c60565b601f01601f19169190910160400192915050565b604051601f8201601f1916810167ffffffffffffffff81118282101715611c2957611c29611ca2565b604052919050565b60008219821115611c4457611c44611c8c565b500190565b600082821015611c5b57611c5b611c8c565b500390565b60005b83811015611c7b578181015183820152602001611c63565b838111156115635750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146110fc57600080fdfea2646970667358221220d516d4f5f6a652f0e8788be0381dd07d9dcaaf30bf9dfdcb41d6fc5dcc18ebb964736f6c63430008040033";

export class BonusPerkBreeding__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _riot: string,
    _bonusPerk: string,
    _nftMetadataRegistry: string,
    _breedConfig: {
      startTime: BigNumberish;
      priceAmount: BigNumberish;
      currency: string;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BonusPerkBreeding> {
    return super.deploy(
      _riot,
      _bonusPerk,
      _nftMetadataRegistry,
      _breedConfig,
      overrides || {}
    ) as Promise<BonusPerkBreeding>;
  }
  getDeployTransaction(
    _riot: string,
    _bonusPerk: string,
    _nftMetadataRegistry: string,
    _breedConfig: {
      startTime: BigNumberish;
      priceAmount: BigNumberish;
      currency: string;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _riot,
      _bonusPerk,
      _nftMetadataRegistry,
      _breedConfig,
      overrides || {}
    );
  }
  attach(address: string): BonusPerkBreeding {
    return super.attach(address) as BonusPerkBreeding;
  }
  connect(signer: Signer): BonusPerkBreeding__factory {
    return super.connect(signer) as BonusPerkBreeding__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BonusPerkBreedingInterface {
    return new utils.Interface(_abi) as BonusPerkBreedingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BonusPerkBreeding {
    return new Contract(address, _abi, signerOrProvider) as BonusPerkBreeding;
  }
}
