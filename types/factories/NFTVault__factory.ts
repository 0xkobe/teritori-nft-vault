/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTVault, NFTVaultInterface } from "../NFTVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeDenominator",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "BuyNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct NFTVault.SaleOption",
        name: "saleOption",
        type: "tuple",
      },
    ],
    name: "ListNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct NFTVault.SaleOption",
        name: "saleOption",
        type: "tuple",
      },
    ],
    name: "UpdateSaleOption",
    type: "event",
  },
  {
    inputs: [],
    name: "FTM",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct NFTVault.SaleOption",
        name: "saleOption",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nftSales",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct NFTVault.SaleOption",
        name: "saleOption",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeDenominator",
        type: "uint256",
      },
    ],
    name: "setFeeNumerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct NFTVault.SaleOption",
        name: "saleOption",
        type: "tuple",
      },
    ],
    name: "updateSaleOption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161149538038061149583398101604081905261002f91610107565b6100383361004d565b60018055610046828261009d565b505061012a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8082111580156100ac57508015155b6100fc5760405162461bcd60e51b815260206004820152601360248201527f696e76616c6964206665652073657474696e6700000000000000000000000000604482015260640160405180910390fd5b600391909155600455565b60008060408385031215610119578182fd5b505080516020909101519092909150565b61135c806101396000396000f3fe6080604052600436106100d25760003560e01c80638da5cb5b1161007f578063b2d2777511610059578063b2d2777514610248578063e545e79b14610268578063e86dea4a14610288578063f2fde38b1461029e57600080fd5b80638da5cb5b146101a4578063a82ba76f146101c2578063ab67f1cf146101d557600080fd5b80636568a279116100b05780636568a27914610142578063715018a61461016257806377a7e77d1461017757600080fd5b8063180b0d7e146100d75780633951c7821461010057806351cff8d914610122575b600080fd5b3480156100e357600080fd5b506100ed60045481565b6040519081526020015b60405180910390f35b34801561010c57600080fd5b5061012061011b3660046111a3565b6102be565b005b34801561012e57600080fd5b5061012061013d366004610ff6565b61032b565b34801561014e57600080fd5b5061012061015d3660046110bc565b610443565b34801561016e57600080fd5b50610120610491565b34801561018357600080fd5b5061018c600081565b6040516001600160a01b0390911681526020016100f7565b3480156101b057600080fd5b506000546001600160a01b031661018c565b6101206101d0366004611010565b6104f7565b3480156101e157600080fd5b5061023a6101f0366004611010565b60026020818152600093845260408085208252928452928290208054835180850190945260018201546001600160a01b039081168552919092015493830193909352919091169082565b6040516100f79291906111e0565b34801561025457600080fd5b50610120610263366004611039565b6106fb565b34801561027457600080fd5b50610120610283366004611039565b61088e565b34801561029457600080fd5b506100ed60035481565b3480156102aa57600080fd5b506101206102b9366004610ff6565b610991565b6000546001600160a01b0316331461031d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6103278282610a70565b5050565b6000546001600160a01b031633146103855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610314565b610440336001600160a01b0383161561042d576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038416906370a082319060240160206040518083038186803b1580156103f057600080fd5b505afa158015610404573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610428919061118b565b61042f565b475b6001600160a01b0384169190610ad6565b50565b60005b81518110156103275761047f82828151811061047257634e487b7160e01b600052603260045260246000fd5b602002602001015161032b565b80610489816112df565b915050610446565b6000546001600160a01b031633146104eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610314565b6104f56000610ba6565b565b6002600154141561054a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610314565b600260018181556001600160a01b03808516600090815260208481526040808320878452825280832081518083018352815486168152825180840190935295810154909416815292909401548285019081529383019190915260045460035493519293919290916105ba91611294565b6105c49190611274565b82516020808501519081015190519293506105ea926001600160a01b0316913391610c03565b602082015151610605906001600160a01b0316333084610c03565b6040516323b872dd60e01b8152306004820152336024820152604481018490526001600160a01b038516906323b872dd90606401600060405180830381600087803b15801561065357600080fd5b505af1158015610667573d6000803e3d6000fd5b50506040518592506001600160a01b038716915033907fa510223e0a07eff695727201b17c3e58d458c3b140ed37b830ea3458d759ac5e90600090a450506001600160a01b039091166000908152600260208181526040808420948452939052918120805473ffffffffffffffffffffffffffffffffffffffff199081168255600180830180549092169091559201558055565b602081015161074c5760405162461bcd60e51b815260206004820152600e60248201527f696e76616c696420616d6f756e740000000000000000000000000000000000006044820152606401610314565b6040517f42842e0e000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390526001600160a01b038416906342842e0e90606401600060405180830381600087803b1580156107b357600080fd5b505af11580156107c7573d6000803e3d6000fd5b50506040805180820182523380825260208083018781526001600160a01b038a8116600081815260028086528882208d83528652908890209651875490841673ffffffffffffffffffffffffffffffffffffffff1991821617885593518051600189018054918616919096161790945592840151959092019490945584518851909416845287820151918401919091528795509350917fdbb82f19b494aeb71ab4169b3dd3c3c9ed3883dd9b1a9f0c6f292c295558840f91015b60405180910390a4505050565b6001600160a01b0383811660009081526002602090815260408083208684529091529020541633146109025760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152606401610314565b6001600160a01b038381166000818152600260208181526040808420888552825292839020865160018201805473ffffffffffffffffffffffffffffffffffffffff191691909716908117909655868201805191909301558251948552905190840152849233917fdbb82f19b494aeb71ab4169b3dd3c3c9ed3883dd9b1a9f0c6f292c295558840f9101610881565b6000546001600160a01b031633146109eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610314565b6001600160a01b038116610a675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610314565b61044081610ba6565b808211158015610a7f57508015155b610acb5760405162461bcd60e51b815260206004820152601360248201527f696e76616c6964206665652073657474696e67000000000000000000000000006044820152606401610314565b600391909155600455565b6001600160a01b038316610b8d576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b31576040519150601f19603f3d011682016040523d82523d6000602084013e610b36565b606091505b5050905080610b875760405162461bcd60e51b815260206004820152601760248201527f5553543a206661696c656420746f2073656e642066746d0000000000000000006044820152606401610314565b50505050565b610ba16001600160a01b0384168383610c7a565b505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038416610c6557348114610c605760405162461bcd60e51b815260206004820152601760248201527f555354463a20696e76616c6964206d73672e76616c75650000000000000000006044820152606401610314565b610b87565b610b876001600160a01b038516848484610d23565b6040516001600160a01b038316602482015260448101829052610ba19084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610d5b565b6040516001600160a01b0380851660248301528316604482015260648101829052610b879085906323b872dd60e01b90608401610cbf565b6000610db0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e409092919063ffffffff16565b805190915015610ba15780806020019051810190610dce919061116b565b610ba15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610314565b6060610e4f8484600085610e59565b90505b9392505050565b606082471015610ed15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610314565b6001600160a01b0385163b610f285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610314565b600080866001600160a01b03168587604051610f4491906111c4565b60006040518083038185875af1925050503d8060008114610f81576040519150601f19603f3d011682016040523d82523d6000602084013e610f86565b606091505b5091509150610f96828286610fa1565b979650505050505050565b60608315610fb0575081610e52565b825115610fc05782518084602001fd5b8160405162461bcd60e51b81526004016103149190611210565b80356001600160a01b0381168114610ff157600080fd5b919050565b600060208284031215611007578081fd5b610e5282610fda565b60008060408385031215611022578081fd5b61102b83610fda565b946020939093013593505050565b6000806000838503608081121561104e578182fd5b61105785610fda565b9350602085013592506040603f1982011215611071578182fd5b506040516040810181811067ffffffffffffffff8211171561109557611095611310565b80604052506110a660408601610fda565b8152606094909401356020850152509093909250565b600060208083850312156110ce578182fd5b823567ffffffffffffffff808211156110e5578384fd5b818501915085601f8301126110f8578384fd5b81358181111561110a5761110a611310565b8060051b915061111b848301611243565b8181528481019084860184860187018a1015611135578788fd5b8795505b8386101561115e5761114a81610fda565b835260019590950194918601918601611139565b5098975050505050505050565b60006020828403121561117c578081fd5b81518015158114610e52578182fd5b60006020828403121561119c578081fd5b5051919050565b600080604083850312156111b5578182fd5b50508035926020909101359150565b600082516111d68184602087016112b3565b9190910192915050565b6001600160a01b038316815260608101610e52602083018480516001600160a01b03168252602090810151910152565b602081526000825180602084015261122f8160408501602087016112b3565b601f01601f19169190910160400192915050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561126c5761126c611310565b604052919050565b60008261128f57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156112ae576112ae6112fa565b500290565b60005b838110156112ce5781810151838201526020016112b6565b83811115610b875750506000910152565b60006000198214156112f3576112f36112fa565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122087a1d2d80556b37c9cc138e9dc2a6d243ae0527d86d86949ac2ab25276c1a48464736f6c63430008040033";

export class NFTVault__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _feeNumerator: BigNumberish,
    _feeDenominator: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTVault> {
    return super.deploy(
      _feeNumerator,
      _feeDenominator,
      overrides || {}
    ) as Promise<NFTVault>;
  }
  getDeployTransaction(
    _feeNumerator: BigNumberish,
    _feeDenominator: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _feeNumerator,
      _feeDenominator,
      overrides || {}
    );
  }
  attach(address: string): NFTVault {
    return super.attach(address) as NFTVault;
  }
  connect(signer: Signer): NFTVault__factory {
    return super.connect(signer) as NFTVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTVaultInterface {
    return new utils.Interface(_abi) as NFTVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTVault {
    return new Contract(address, _abi, signerOrProvider) as NFTVault;
  }
}
