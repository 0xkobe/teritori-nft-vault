/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTMetadataRegistry,
  NFTMetadataRegistryInterface,
} from "../NFTMetadataRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "metadata",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "queryMetadataKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "queryNftMetadata",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "metadata_key",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "tokenIdArray",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "stanimaArray",
        type: "uint256[]",
      },
    ],
    name: "registerNftMegadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_admins",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "_isAdmin",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bdb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a08f631e11610076578063f2fde38b1161005b578063f2fde38b1461018d578063f7e3d759146101a0578063fd1bd577146101b357600080fd5b8063a08f631e1461013b578063e60f47561461017a57600080fd5b80638129fc1c116100a75780638129fc1c1461010557806384e7686b1461010d5780638da5cb5b1461012057600080fd5b806324d7806c146100c3578063715018a6146100fb575b600080fd5b6100e66100d13660046108b6565b60666020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6101036101c6565b005b6101036101da565b61010361011b3660046109d9565b6102ff565b6033546040516001600160a01b0390911681526020016100f2565b61016c610149366004610952565b606560209081526000938452604080852082529284528284209052825290205481565b6040519081526020016100f2565b61016c610188366004610984565b61037f565b61010361019b3660046108b6565b6103ca565b61016c6101ae366004610a85565b610457565b6101036101c13660046108d7565b610487565b6101ce61060a565b6101d86000610664565b565b600054610100900460ff16158080156101fa5750600054600160ff909116105b806102145750303b158015610214575060005460ff166001145b61028b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b6000805460ff1916600117905580156102ae576000805461ff0019166101001790555b6102b66106ce565b80156102fc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b61030761060a565b60005b825181101561037a57816066600085848151811061033857634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905561037381610b68565b905061030a565b505050565b6001600160a01b0383166000908152606560205260408120816103a185610457565b815260200190815260200160002060008381526020019081526020016000205490509392505050565b6103d261060a565b6001600160a01b03811661044e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610282565b6102fc81610664565b60008160405160200161046a9190610ac0565b604051602081830303815290604052805190602001209050919050565b6033546001600160a01b03163314806104af57503360009081526066602052604090205460ff165b6104fb5760405162461bcd60e51b815260206004820152600c60248201527f756e617574686f72697a656400000000000000000000000000000000000000006044820152606401610282565b805182511461054c5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c6964206172726179000000000000000000000000000000000000006044820152606401610282565b60005b82518110156106035781818151811061057857634e487b7160e01b600052603260045260246000fd5b602002602001015160656000876001600160a01b03166001600160a01b03168152602001908152602001600020600086815260200190815260200160002060008584815181106105d857634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002081905550806105fc90610b68565b905061054f565b5050505050565b6033546001600160a01b031633146101d85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610282565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107395760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610282565b6101d8600054610100900460ff166107a75760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610282565b6101d833610664565b80356001600160a01b03811681146107c757600080fd5b919050565b600082601f8301126107dc578081fd5b813560206107f16107ec83610b44565b610b13565b80838252828201915082860187848660051b8901011115610810578586fd5b855b8581101561082e57813584529284019290840190600101610812565b5090979650505050505050565b803580151581146107c757600080fd5b600082601f83011261085b578081fd5b813567ffffffffffffffff81111561087557610875610b8f565b610888601f8201601f1916602001610b13565b81815284602083860101111561089c578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156108c7578081fd5b6108d0826107b0565b9392505050565b600080600080608085870312156108ec578283fd5b6108f5856107b0565b935060208501359250604085013567ffffffffffffffff80821115610918578384fd5b610924888389016107cc565b93506060870135915080821115610939578283fd5b50610946878288016107cc565b91505092959194509250565b600080600060608486031215610966578283fd5b61096f846107b0565b95602085013595506040909401359392505050565b600080600060608486031215610998578283fd5b6109a1846107b0565b9250602084013567ffffffffffffffff8111156109bc578283fd5b6109c88682870161084b565b925050604084013590509250925092565b600080604083850312156109eb578182fd5b823567ffffffffffffffff811115610a01578283fd5b8301601f81018513610a11578283fd5b80356020610a216107ec83610b44565b80838252828201915082850189848660051b8801011115610a40578788fd5b8795505b84861015610a6957610a55816107b0565b835260019590950194918301918301610a44565b509550610a79905086820161083b565b93505050509250929050565b600060208284031215610a96578081fd5b813567ffffffffffffffff811115610aac578182fd5b610ab88482850161084b565b949350505050565b6000602080835283518082850152825b81811015610aec57858101830151858201604001528201610ad0565b81811115610afd5783604083870101525b50601f01601f1916929092016040019392505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b3c57610b3c610b8f565b604052919050565b600067ffffffffffffffff821115610b5e57610b5e610b8f565b5060051b60200190565b6000600019821415610b8857634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122003d131d4236251a490833104690084f4c1c62344b8f24dbf2e24ee2739d21b9f64736f6c63430008040033";

export class NFTMetadataRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMetadataRegistry> {
    return super.deploy(overrides || {}) as Promise<NFTMetadataRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMetadataRegistry {
    return super.attach(address) as NFTMetadataRegistry;
  }
  connect(signer: Signer): NFTMetadataRegistry__factory {
    return super.connect(signer) as NFTMetadataRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMetadataRegistryInterface {
    return new utils.Interface(_abi) as NFTMetadataRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMetadataRegistry {
    return new Contract(address, _abi, signerOrProvider) as NFTMetadataRegistry;
  }
}
