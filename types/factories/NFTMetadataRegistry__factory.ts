/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTMetadataRegistry,
  NFTMetadataRegistryInterface,
} from "../NFTMetadataRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "metadata",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "queryMetadataKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "queryNftMetadata",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "metadata_key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stanima",
        type: "uint256",
      },
    ],
    name: "registerNftMegadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "metadata_key",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "tokenIdArray",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "stanimaArray",
        type: "uint256[]",
      },
    ],
    name: "registerNftMegadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_admins",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "_isAdmin",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cb3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638da5cb5b11610081578063f2fde38b1161005b578063f2fde38b146101ab578063f7e3d759146101be578063fd1bd577146101d157600080fd5b80638da5cb5b1461013e578063a08f631e14610159578063e60f47561461019857600080fd5b8063715018a6116100b2578063715018a61461011b5780638129fc1c1461012357806384e7686b1461012b57600080fd5b806310525f78146100ce57806324d7806c146100e3575b600080fd5b6100e16100dc366004610a24565b6101e4565b005b6101066100f1366004610956565b60666020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100e161027c565b6100e1610290565b6100e1610139366004610ab1565b6103b0565b6033546040516001600160a01b039091168152602001610112565b61018a6101673660046109f2565b606560209081526000938452604080852082529284528284209052825290205481565b604051908152602001610112565b61018a6101a6366004610a5c565b610430565b6100e16101b9366004610956565b61047b565b61018a6101cc366004610b5d565b610508565b6100e16101df366004610977565b610538565b6033546001600160a01b031633148061020c57503360009081526066602052604090205460ff165b61024c5760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b60448201526064015b60405180910390fd5b6001600160a01b039093166000908152606560209081526040808320948352938152838220928252919091522055565b6102846106aa565b61028e6000610704565b565b600054610100900460ff16158080156102b05750600054600160ff909116105b806102ca5750303b1580156102ca575060005460ff166001145b61033c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610243565b6000805460ff19166001179055801561035f576000805461ff0019166101001790555b61036761076e565b80156103ad576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6103b86106aa565b60005b825181101561042b5781606660008584815181106103e957634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905561042481610c40565b90506103bb565b505050565b6001600160a01b03831660009081526065602052604081208161045285610508565b815260200190815260200160002060008381526020019081526020016000205490509392505050565b6104836106aa565b6001600160a01b0381166104ff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610243565b6103ad81610704565b60008160405160200161051b9190610b98565b604051602081830303815290604052805190602001209050919050565b6033546001600160a01b031633148061056057503360009081526066602052604090205460ff165b61059b5760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b6044820152606401610243565b80518251146105ec5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c6964206172726179000000000000000000000000000000000000006044820152606401610243565b60005b82518110156106a35781818151811061061857634e487b7160e01b600052603260045260246000fd5b602002602001015160656000876001600160a01b03166001600160a01b031681526020019081526020016000206000868152602001908152602001600020600085848151811061067857634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020819055508061069c90610c40565b90506105ef565b5050505050565b6033546001600160a01b0316331461028e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610243565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107d95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610243565b61028e600054610100900460ff166108475760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610243565b61028e33610704565b80356001600160a01b038116811461086757600080fd5b919050565b600082601f83011261087c578081fd5b8135602061089161088c83610c1c565b610beb565b80838252828201915082860187848660051b89010111156108b0578586fd5b855b858110156108ce578135845292840192908401906001016108b2565b5090979650505050505050565b8035801515811461086757600080fd5b600082601f8301126108fb578081fd5b813567ffffffffffffffff81111561091557610915610c67565b610928601f8201601f1916602001610beb565b81815284602083860101111561093c578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610967578081fd5b61097082610850565b9392505050565b6000806000806080858703121561098c578283fd5b61099585610850565b935060208501359250604085013567ffffffffffffffff808211156109b8578384fd5b6109c48883890161086c565b935060608701359150808211156109d9578283fd5b506109e68782880161086c565b91505092959194509250565b600080600060608486031215610a06578283fd5b610a0f84610850565b95602085013595506040909401359392505050565b60008060008060808587031215610a39578384fd5b610a4285610850565b966020860135965060408601359560600135945092505050565b600080600060608486031215610a70578283fd5b610a7984610850565b9250602084013567ffffffffffffffff811115610a94578283fd5b610aa0868287016108eb565b925050604084013590509250925092565b60008060408385031215610ac3578182fd5b823567ffffffffffffffff811115610ad9578283fd5b8301601f81018513610ae9578283fd5b80356020610af961088c83610c1c565b80838252828201915082850189848660051b8801011115610b18578788fd5b8795505b84861015610b4157610b2d81610850565b835260019590950194918301918301610b1c565b509550610b5190508682016108db565b93505050509250929050565b600060208284031215610b6e578081fd5b813567ffffffffffffffff811115610b84578182fd5b610b90848285016108eb565b949350505050565b6000602080835283518082850152825b81811015610bc457858101830151858201604001528201610ba8565b81811115610bd55783604083870101525b50601f01601f1916929092016040019392505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c1457610c14610c67565b604052919050565b600067ffffffffffffffff821115610c3657610c36610c67565b5060051b60200190565b6000600019821415610c6057634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c3bc67fc767592dbcdcd7214a4b74e5f2423f22f07fe4443b5e93a5b14882a2e64736f6c63430008040033";

export class NFTMetadataRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMetadataRegistry> {
    return super.deploy(overrides || {}) as Promise<NFTMetadataRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMetadataRegistry {
    return super.attach(address) as NFTMetadataRegistry;
  }
  connect(signer: Signer): NFTMetadataRegistry__factory {
    return super.connect(signer) as NFTMetadataRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMetadataRegistryInterface {
    return new utils.Interface(_abi) as NFTMetadataRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMetadataRegistry {
    return new Contract(address, _abi, signerOrProvider) as NFTMetadataRegistry;
  }
}
