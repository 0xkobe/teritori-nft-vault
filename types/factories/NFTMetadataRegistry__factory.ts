/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTMetadataRegistry,
  NFTMetadataRegistryInterface,
} from "../NFTMetadataRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_POINT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "metadata",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "queryMetadataKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "queryNftMetadata",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "metadata_key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stanima",
        type: "uint256",
      },
    ],
    name: "registerNftMegadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "metadata_key",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "tokenIdArray",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "stanimaArray",
        type: "uint256[]",
      },
    ],
    name: "registerNftMegadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_admins",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "_isAdmin",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ccd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638da5cb5b11610081578063f2fde38b1161005b578063f2fde38b146101c5578063f7e3d759146101d8578063fd1bd577146101eb57600080fd5b80638da5cb5b14610166578063a08f631e14610181578063e60f4756146101b257600080fd5b8063715018a6116100b2578063715018a6146101435780638129fc1c1461014b57806384e7686b1461015357600080fd5b806310525f78146100d95780631135daeb146100ee57806324d7806c14610110575b600080fd5b6100ec6100e7366004610a3e565b6101fe565b005b6100fd670de0b6b3a764000081565b6040519081526020015b60405180910390f35b61013361011e366004610970565b60666020526000908152604090205460ff1681565b6040519015158152602001610107565b6100ec610296565b6100ec6102aa565b6100ec610161366004610acb565b6103ca565b6033546040516001600160a01b039091168152602001610107565b6100fd61018f366004610a0c565b606560209081526000938452604080852082529284528284209052825290205481565b6100fd6101c0366004610a76565b61044a565b6100ec6101d3366004610970565b610495565b6100fd6101e6366004610b77565b610522565b6100ec6101f9366004610991565b610552565b6033546001600160a01b031633148061022657503360009081526066602052604090205460ff165b6102665760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b60448201526064015b60405180910390fd5b6001600160a01b039093166000908152606560209081526040808320948352938152838220928252919091522055565b61029e6106c4565b6102a8600061071e565b565b600054610100900460ff16158080156102ca5750600054600160ff909116105b806102e45750303b1580156102e4575060005460ff166001145b6103565760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161025d565b6000805460ff191660011790558015610379576000805461ff0019166101001790555b610381610788565b80156103c7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6103d26106c4565b60005b825181101561044557816066600085848151811061040357634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905561043e81610c5a565b90506103d5565b505050565b6001600160a01b03831660009081526065602052604081208161046c85610522565b815260200190815260200160002060008381526020019081526020016000205490509392505050565b61049d6106c4565b6001600160a01b0381166105195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161025d565b6103c78161071e565b6000816040516020016105359190610bb2565b604051602081830303815290604052805190602001209050919050565b6033546001600160a01b031633148061057a57503360009081526066602052604090205460ff165b6105b55760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015260640161025d565b80518251146106065760405162461bcd60e51b815260206004820152600d60248201527f696e76616c696420617272617900000000000000000000000000000000000000604482015260640161025d565b60005b82518110156106bd5781818151811061063257634e487b7160e01b600052603260045260246000fd5b602002602001015160656000876001600160a01b03166001600160a01b031681526020019081526020016000206000868152602001908152602001600020600085848151811061069257634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002081905550806106b690610c5a565b9050610609565b5050505050565b6033546001600160a01b031633146102a85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025d565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107f35760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161025d565b6102a8600054610100900460ff166108615760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161025d565b6102a83361071e565b80356001600160a01b038116811461088157600080fd5b919050565b600082601f830112610896578081fd5b813560206108ab6108a683610c36565b610c05565b80838252828201915082860187848660051b89010111156108ca578586fd5b855b858110156108e8578135845292840192908401906001016108cc565b5090979650505050505050565b8035801515811461088157600080fd5b600082601f830112610915578081fd5b813567ffffffffffffffff81111561092f5761092f610c81565b610942601f8201601f1916602001610c05565b818152846020838601011115610956578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610981578081fd5b61098a8261086a565b9392505050565b600080600080608085870312156109a6578283fd5b6109af8561086a565b935060208501359250604085013567ffffffffffffffff808211156109d2578384fd5b6109de88838901610886565b935060608701359150808211156109f3578283fd5b50610a0087828801610886565b91505092959194509250565b600080600060608486031215610a20578283fd5b610a298461086a565b95602085013595506040909401359392505050565b60008060008060808587031215610a53578384fd5b610a5c8561086a565b966020860135965060408601359560600135945092505050565b600080600060608486031215610a8a578283fd5b610a938461086a565b9250602084013567ffffffffffffffff811115610aae578283fd5b610aba86828701610905565b925050604084013590509250925092565b60008060408385031215610add578182fd5b823567ffffffffffffffff811115610af3578283fd5b8301601f81018513610b03578283fd5b80356020610b136108a683610c36565b80838252828201915082850189848660051b8801011115610b32578788fd5b8795505b84861015610b5b57610b478161086a565b835260019590950194918301918301610b36565b509550610b6b90508682016108f5565b93505050509250929050565b600060208284031215610b88578081fd5b813567ffffffffffffffff811115610b9e578182fd5b610baa84828501610905565b949350505050565b6000602080835283518082850152825b81811015610bde57858101830151858201604001528201610bc2565b81811115610bef5783604083870101525b50601f01601f1916929092016040019392505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c2e57610c2e610c81565b604052919050565b600067ffffffffffffffff821115610c5057610c50610c81565b5060051b60200190565b6000600019821415610c7a57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212208a86a17c591d1dadf551d13390471abb9e2265d37933c23f04886f92bb8c44b764736f6c63430008040033";

export class NFTMetadataRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMetadataRegistry> {
    return super.deploy(overrides || {}) as Promise<NFTMetadataRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMetadataRegistry {
    return super.attach(address) as NFTMetadataRegistry;
  }
  connect(signer: Signer): NFTMetadataRegistry__factory {
    return super.connect(signer) as NFTMetadataRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMetadataRegistryInterface {
    return new utils.Interface(_abi) as NFTMetadataRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMetadataRegistry {
    return new Contract(address, _abi, signerOrProvider) as NFTMetadataRegistry;
  }
}
