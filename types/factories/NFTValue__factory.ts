/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTValue, NFTValueInterface } from "../NFTValue";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "BuyNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct NFTValue.SaleOption",
        name: "saleOption",
        type: "tuple",
      },
    ],
    name: "ListNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct NFTValue.SaleOption",
        name: "saleOption",
        type: "tuple",
      },
    ],
    name: "UpdateSaleOption",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct NFTValue.SaleOption",
        name: "saleOption",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nftSales",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct NFTValue.SaleOption",
        name: "saleOption",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct NFTValue.SaleOption",
        name: "saleOption",
        type: "tuple",
      },
    ],
    name: "updateSaleOption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600055610a6a806100256000396000f3fe60806040526004361061003f5760003560e01c8063a82ba76f14610044578063ab67f1cf14610059578063b2d27775146100d5578063e545e79b146100f5575b600080fd5b610057610052366004610898565b610115565b005b34801561006557600080fd5b506100be610074366004610898565b600160208181526000938452604080852082529284529282902080548351808501909452918101546001600160a01b03908116845260029091015493830193909352919091169082565b6040516100cc9291906109a5565b60405180910390f35b3480156100e157600080fd5b506100576100f03660046108c1565b6102cf565b34801561010157600080fd5b506100576101103660046108c1565b610423565b6002600054141561016d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260008181556001600160a01b03808516825260016020818152604080852087865282529384902084518086018652815485168152855180870190965292810154841685529094015483850190815293810183905280519351925190936101db939190921691339161052c565b6040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b15801561022957600080fd5b505af115801561023d573d6000803e3d6000fd5b50506040518492506001600160a01b038616915033907fa510223e0a07eff695727201b17c3e58d458c3b140ed37b830ea3458d759ac5e90600090a4506001600160a01b039091166000908152600160208181526040808420948452939052918120805473ffffffffffffffffffffffffffffffffffffffff1990811682558184018054909116905560020181905555565b6040517f42842e0e000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390526001600160a01b038416906342842e0e90606401600060405180830381600087803b15801561033657600080fd5b505af115801561034a573d6000803e3d6000fd5b50506040805180820182523380825260208083018781526001600160a01b038a8116600081815260018086528882208d83528652908890209651875490841673ffffffffffffffffffffffffffffffffffffffff1991821617885593518051918801805492909416919094161790915591015160029093019290925591518694509092507fdbb82f19b494aeb71ab4169b3dd3c3c9ed3883dd9b1a9f0c6f292c295558840f9061041690869081516001600160a01b031681526020918201519181019190915260400190565b60405180910390a4505050565b6001600160a01b0383811660009081526001602090815260408083208684529091529020541633146104975760405162461bcd60e51b815260206004820152600c60248201527f556e617574686f72697a656400000000000000000000000000000000000000006044820152606401610164565b6001600160a01b0383811660008181526001602081815260408084208885528252928390208651928101805473ffffffffffffffffffffffffffffffffffffffff19169390961692831790955585810180516002909601959095558251918252935193810193909352849233917fdbb82f19b494aeb71ab4169b3dd3c3c9ed3883dd9b1a9f0c6f292c295558840f9101610416565b6001600160a01b03841661058e573481146105895760405162461bcd60e51b815260206004820152601760248201527f555354463a20696e76616c6964206d73672e76616c75650000000000000000006044820152606401610164565b6105a3565b6105a36001600160a01b0385168484846105a9565b50505050565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526105a3928792916000916106569185169084906106eb565b8051909150156106e657808060200190518101906106749190610969565b6106e65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610164565b505050565b60606106fa8484600085610704565b90505b9392505050565b60608247101561077c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610164565b843b6107ca5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610164565b600080866001600160a01b031685876040516107e69190610989565b60006040518083038185875af1925050503d8060008114610823576040519150601f19603f3d011682016040523d82523d6000602084013e610828565b606091505b5091509150610838828286610843565b979650505050505050565b606083156108525750816106fd565b8251156108625782518084602001fd5b8160405162461bcd60e51b815260040161016491906109d5565b80356001600160a01b038116811461089357600080fd5b919050565b600080604083850312156108aa578182fd5b6108b38361087c565b946020939093013593505050565b600080600083850360808112156108d6578182fd5b6108df8561087c565b9350602085013592506040603f19820112156108f9578182fd5b506040516040810181811067ffffffffffffffff82111715610942577f4e487b710000000000000000000000000000000000000000000000000000000083526041600452602483fd5b80604052506109536040860161087c565b8152606094909401356020850152509093909250565b60006020828403121561097a578081fd5b815180151581146106fd578182fd5b6000825161099b818460208701610a08565b9190910192915050565b6001600160a01b0383168152606081016106fd602083018480516001600160a01b03168252602090810151910152565b60208152600082518060208401526109f4816040850160208701610a08565b601f01601f19169190910160400192915050565b60005b83811015610a23578181015183820152602001610a0b565b838111156105a3575050600091015256fea2646970667358221220a19f2a1d900b05b4dff95a14b7ce603cc2a12f434a7d1e66ad2754525297603f64736f6c63430008040033";

export class NFTValue__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTValue> {
    return super.deploy(overrides || {}) as Promise<NFTValue>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTValue {
    return super.attach(address) as NFTValue;
  }
  connect(signer: Signer): NFTValue__factory {
    return super.connect(signer) as NFTValue__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTValueInterface {
    return new utils.Interface(_abi) as NFTValueInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTValue {
    return new Contract(address, _abi, signerOrProvider) as NFTValue;
  }
}
